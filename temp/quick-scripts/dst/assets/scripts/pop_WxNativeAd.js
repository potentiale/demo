
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/pop_WxNativeAd.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c82c4abgU9MI6vz+buErsC9', 'pop_WxNativeAd');
// scripts/pop_WxNativeAd.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    s = e("AppCommon"),
    c = e("wxTs"),
    l = e("ListenID"),
    p = e("Notifier"),
    d = e("pop"),
    t = cc._decorator,
    e = t.ccclass,
    t = t.property,
    e = (r = d["default"], i(u, r), u.prototype.onLoad = function () {
  this._pointAd = s["default"].ADID.NativeAdList[0], this.node.height = cc.winSize.height, this.node.width = cc.winSize.width;
}, u.prototype.onDisable = function () {
  p.Notifier.removeListener(l.ListenID.Ad_WXNativeShow, this.setNativeSingleVisible, this);
}, u.prototype.onEnable = function () {
  p.Notifier.addListener(l.ListenID.Ad_WXNativeShow, this.setNativeSingleVisible, this);
}, u.prototype.cocosToWx = function (e) {
  var t = cc.Vec2.ZERO;
  e instanceof cc.Node ? (n = e.parent.convertToWorldSpaceAR(e.position), t.x = n.x, t.y = n.y) : (t.x = e.x, t.y = e.y);
  var o = cc.winSize;
  t.y = o.height - t.y;
  var n = wx.getSystemInfoSync(),
      e = n.screenWidth,
      n = n.screenHeight;
  return cc.v2(e / o.width * t.x, n / o.height * t.y);
}, u.prototype.start = function () {
  var e,
      t,
      o = this;
  wx && (this._sysInfo = wx.getSystemInfoSync(), t = this.cocosToWx(this.nativeAd1Node), c["default"].Instance.sentAdsEvent(c.AdsEventType["native"], c.AdsEventName.ad_request), (e = this.getWxCustomAd(this._pointAd, t.x, t.y)) && (this._normalAd1 = e, this._normalAd1.onLoad(function () {
    c["default"].Instance.sentAdsEvent(c.AdsEventType["native"], c.AdsEventName.ad_fill);
  }), this._normalAd1.onError(function (e) {
    console.log("原生滚动异常", e.errCode, e.errMsg);
  })), t = this.cocosToWx(this.nativeAd2Node), c["default"].Instance.sentAdsEvent(c.AdsEventType["native"], c.AdsEventName.ad_request), (e = this.getWxCustomAd(this._pointAd, t.x, t.y)) && (this._normalAd2 = e, this._normalAd2.onLoad(function () {
    c["default"].Instance.sentAdsEvent(c.AdsEventType["native"], c.AdsEventName.ad_fill);
  }), this._normalAd2.onError(function (e) {
    console.log("原生滚动异常", e.errCode, e.errMsg);
  }), console.log("加载成功!")), setTimeout(function () {
    o.setNativeSingleVisible(!0);
  }, 500));
}, u.prototype.setNativeSingleVisible = function (e) {
  this._normalAd1 && (e ? this._normalAd1.show().then(function () {
    c["default"].Instance.sentAdsEvent(c.AdsEventType["native"], c.AdsEventName.ad_impression);
  }) : this._normalAd1.hide()), this._normalAd2 && (e ? this._normalAd2.show().then(function () {
    c["default"].Instance.sentAdsEvent(c.AdsEventType["native"], c.AdsEventName.ad_impression);
  }) : this._normalAd2.hide());
}, u.prototype.getWxCustomAd = function (e, t, o) {
  return wx.createCustomAd({
    adUnitId: e,
    adIntervals: 30,
    style: {
      left: t,
      top: o,
      fixed: !0
    }
  });
}, a([t(cc.Node)], u.prototype, "nativeAd1Node", void 0), a([t(cc.Node)], u.prototype, "nativeAd2Node", void 0), a([e], u));

function u() {
  var e = null !== r && r.apply(this, arguments) || this;
  return e.nativeAd1Node = null, e.nativeAd2Node = null, e._pointAd = "", e._normalAd1 = null, e._normalAd2 = null, e._sysInfo = null, e;
}

o["default"] = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,