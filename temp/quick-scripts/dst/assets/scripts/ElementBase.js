
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ElementBase.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '597c5mrq8xLRILOhKJcPCnz', 'ElementBase');
// scripts/ElementBase.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
}), o.ElementBase = o.HurtData = o.Element_Type = void 0;
var r,
    s = e("AppCommon"),
    c = e("ListenID"),
    l = e("ProgressBar"),
    t = cc._decorator,
    e = (t.ccclass, t.menu, t.property);
(t = r = o.Element_Type || (o.Element_Type = {}))[t.Not = 0] = "Not", t[t.Role = 1] = "Role", t[t.MinMonster = 2] = "MinMonster", t[t.BigMonster = 3] = "BigMonster", t[t.Npc = 4] = "Npc", t[t.Summoned = 5] = "Summoned", t[t.Building = 6] = "Building", t[t.Egg = 7] = "Egg", t[t.WC_Battery = 8] = "WC_Battery", t[t.WC_FreshBox = 9] = "WC_FreshBox", t[t.WC_Monster = 10] = "WC_Monster", o.HurtData = function (e, t, o, n) {
  void 0 === t && (t = 0), void 0 === o && (o = r.Not), void 0 === n && (n = !1), this.id = 0, this.type = r.Not, this.num = 0, this.isForce = !1, this.num = e, this.id = t, this.type = o, this.isForce = n;
};
var p,
    e = (p = cc.Component, i(d, p), d.prototype.initAttribute = function () {}, d.prototype.setAttribute = function () {}, d.prototype.upAttribute = function () {}, d.prototype.onInit = function () {}, d.prototype.onGamePause = function (e) {
  e ? cc.director.getScheduler().pauseTarget(this) : cc.director.getScheduler().resumeTarget(this);
}, d.prototype.setState = function (e) {
  this._isActive != e && (this._isActive = e);
}, d.prototype.setHurt = function () {}, d.prototype.getHurt = function (e) {
  (this._isActive || e.isForce) && this.setLife(e);
}, d.prototype.setLife = function (e) {
  "number" != typeof e && (e = e.num), this._life = Math.min(this._life + e, this.attribute.data.hp), (!this._life || this._life < 0) && (this._life = 0), this._lifeRatio = this._life / this.attribute.data.hp, this.lifeBar && this.lifeBar.set(this._lifeRatio);
}, d.prototype.setDestroyed = function () {}, d.prototype.deleteNode = function () {
  this.node.off(c.ListenID.Send_Hurt, this.getHurt, this), this.onVanish(), this.node.destroy(), this.node.removeFromParent(!1);
}, d.prototype.onVanish = function () {}, d.prototype.effectTrigger = function () {}, d.prototype.setConstructImg = function (o, e) {
  void 0 === o && (o = this.imgList[0]), this.isUpdataIme && o && cc.resources.load("img/gameResources/" + (e || this.attribute.data.id), cc.SpriteFrame, function (e, t) {
    o.spriteFrame = t;
  });
}, d.prototype.setAnimation = function (e, t) {
  if (void 0 === t && (t = !1), this.mySkeleton && (!t || this.mySkeleton.animation != e)) return this.mySkeleton.setAnimation(0, e, t);
}, d.prototype.setCollision = function (e) {
  this.myCollision || (this.myCollision = this.node.getComponent(cc.Collider)), this.myCollision.enabled = e;
}, d.prototype.getZIndex = function () {
  this.node.zIndex = s["default"].MapClr.mapSize.height - (Math.floor(this.node.y / s["default"].MapClr.tileSize.height) + s["default"].MapClr.mapSize.height / 2);
}, d.prototype.materialTwinkle = function () {
  var e,
      t = this;
  this.myMals && (e = function e(_e) {
    t.myMals.setProperty("setwhite", _e), t.mySkeleton && t.mySkeleton._updateMaterial();
  }, this.myMalTween = cc.tween(this.node).repeat(1, cc.tween().call(function () {
    e(0);
  }).delay(.05).call(function () {
    e(1);
  }).delay(.05)).call(function () {
    e(1), t.myMalTween && t.myMalTween.stop(), t.myMalTween = null;
  }).start());
}, a([e({
  type: cc.Enum(r)
})], d.prototype, "type", void 0), a([e(l["default"])], d.prototype, "lifeBar", void 0), a([e([cc.Sprite])], d.prototype, "imgList", void 0), a([e], d.prototype, "isUpdataIme", void 0), d);

function d() {
  var e = null !== p && p.apply(this, arguments) || this;
  return e.type = r.Not, e.lifeBar = null, e.imgList = [], e.isUpdataIme = !0, e._roomID = 0, e.attribute = null, e._life = 1, e._lifeRatio = 1, e._isInvincible = !1, e._isActive = !1, e._isHaveUpDate = !1, e._attackSpeed = 1, e._attackRadius = 300, e;
}

o.ElementBase = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,