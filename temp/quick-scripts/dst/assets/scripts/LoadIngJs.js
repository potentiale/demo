
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/LoadIngJs.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '635daupjp1MELec1AzzYoP6', 'LoadIngJs');
// scripts/LoadIngJs.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    s = e("pop"),
    t = cc._decorator,
    e = t.ccclass,
    e = (t.property, r = s["default"], i(c, r), c.prototype.onLoad = function () {
  this.node.opacity = 255, this.show();
}, c.prototype.show = function () {
  this.loadShow || (this.loadShow = !0, this.node.opacity = 0, this.node.active = !0, cc.tween(this.node).to(.3, {
    opacity: 255
  }).start());
}, c.prototype.hide = function (e) {
  var t = this;
  void 0 === e && (e = 0), cc.Tween.stopAllByTarget(this.node), cc.tween(this.node).delay(e).to(.1, {
    opacity: 0
  }).call(function () {
    t.node.active = !1, t.loadShow = !1;
  }).start();
}, a([e], c));

function c() {
  var e = null !== r && r.apply(this, arguments) || this;
  return e.nodeArr = [], e.startPoint = [], e.loadShow = !1, e;
}

o["default"] = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcTG9hZEluZ0pzLmpzIl0sIm5hbWVzIjpbImUiLCJyZXF1aXJlIiwidCIsIm1vZHVsZSIsIm8iLCJleHBvcnRzIiwibiIsImkiLCJfX2V4dGVuZHMiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiY29uc3RydWN0b3IiLCJjcmVhdGUiLCJhIiwiX19kZWNvcmF0ZSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJSZWZsZWN0IiwiZGVjb3JhdGUiLCJzIiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImNjIiwiX2RlY29yYXRvciIsImNjY2xhc3MiLCJwcm9wZXJ0eSIsImMiLCJvbkxvYWQiLCJub2RlIiwib3BhY2l0eSIsInNob3ciLCJsb2FkU2hvdyIsImFjdGl2ZSIsInR3ZWVuIiwidG8iLCJzdGFydCIsImhpZGUiLCJUd2VlbiIsInN0b3BBbGxCeVRhcmdldCIsImRlbGF5IiwiYXBwbHkiLCJub2RlQXJyIiwic3RhcnRQb2ludCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxDQUFDLEdBQUNDLE9BQU47QUFDQSxJQUFJQyxDQUFDLEdBQUNDLE1BQU47QUFDQSxJQUFJQyxDQUFDLEdBQUNDLE9BQU47QUFDQTs7QUFBYSxJQUFJQyxFQUFKO0FBQUEsSUFBTUMsQ0FBQyxHQUFDLFVBQU0sU0FBS0MsU0FBWCxLQUF1QkYsRUFBQyxHQUFDLFdBQVNOLENBQVQsRUFBV0UsQ0FBWCxFQUFhO0FBQUMsU0FBTSxDQUFDSSxFQUFDLEdBQUNHLE1BQU0sQ0FBQ0MsY0FBUCxJQUF1QjtBQUFDQyxJQUFBQSxTQUFTLEVBQUM7QUFBWCxlQUF5QkMsS0FBekIsSUFBZ0MsVUFBU1osQ0FBVCxFQUFXRSxDQUFYLEVBQWE7QUFBQ0YsSUFBQUEsQ0FBQyxDQUFDVyxT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QyxDQUFDb0MsUUFBRixHQUFXLENBQUMsQ0FBN0I7QUFBK0IsR0FBL0YsRUFBaUdJLEtBQWpHLEVBQXREO0FBQStKLENBQTliLEVBQStieEIsQ0FBQyxDQUFDLENBQUNsQixDQUFELENBQUQsRUFBS2lDLENBQUwsQ0FBbGMsQ0FBOUM7O0FBQXlmLFNBQVNBLENBQVQsR0FBWTtBQUFDLE1BQUlqQyxDQUFDLEdBQUMsU0FBT3NCLENBQVAsSUFBVUEsQ0FBQyxDQUFDeUIsS0FBRixDQUFRLElBQVIsRUFBYTNCLFNBQWIsQ0FBVixJQUFtQyxJQUF6QztBQUE4QyxTQUFPcEIsQ0FBQyxDQUFDZ0QsT0FBRixHQUFVLEVBQVYsRUFBYWhELENBQUMsQ0FBQ2lELFVBQUYsR0FBYSxFQUExQixFQUE2QmpELENBQUMsQ0FBQ3NDLFFBQUYsR0FBVyxDQUFDLENBQXpDLEVBQTJDdEMsQ0FBbEQ7QUFBb0Q7O0FBQUFJLENBQUMsV0FBRCxHQUFVSixDQUFWIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZT1yZXF1aXJlO1xudmFyIHQ9bW9kdWxlO1xudmFyIG89ZXhwb3J0cztcblwidXNlIHN0cmljdFwiO3ZhciBuLGk9dGhpcyYmdGhpcy5fX2V4dGVuZHN8fChuPWZ1bmN0aW9uKGUsdCl7cmV0dXJuKG49T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKGUsdCl7ZS5fX3Byb3RvX189dH18fGZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBvIGluIHQpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsbykmJihlW29dPXRbb10pfSkoZSx0KX0sZnVuY3Rpb24oZSx0KXtmdW5jdGlvbiBvKCl7dGhpcy5jb25zdHJ1Y3Rvcj1lfW4oZSx0KSxlLnByb3RvdHlwZT1udWxsPT09dD9PYmplY3QuY3JlYXRlKHQpOihvLnByb3RvdHlwZT10LnByb3RvdHlwZSxuZXcgbyl9KSxhPXRoaXMmJnRoaXMuX19kZWNvcmF0ZXx8ZnVuY3Rpb24oZSx0LG8sbil7dmFyIGksYT1hcmd1bWVudHMubGVuZ3RoLHI9YTwzP3Q6bnVsbD09PW4/bj1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsbyk6bjtpZihcIm9iamVjdFwiPT10eXBlb2YgUmVmbGVjdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSlyPVJlZmxlY3QuZGVjb3JhdGUoZSx0LG8sbik7ZWxzZSBmb3IodmFyIHM9ZS5sZW5ndGgtMTswPD1zO3MtLSkoaT1lW3NdKSYmKHI9KGE8Mz9pKHIpOjM8YT9pKHQsbyxyKTppKHQsbykpfHxyKTtyZXR1cm4gMzxhJiZyJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLHIpLHJ9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShvLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciByLHM9ZShcInBvcFwiKSx0PWNjLl9kZWNvcmF0b3IsZT10LmNjY2xhc3MsZT0odC5wcm9wZXJ0eSxyPXMuZGVmYXVsdCxpKGMsciksYy5wcm90b3R5cGUub25Mb2FkPWZ1bmN0aW9uKCl7dGhpcy5ub2RlLm9wYWNpdHk9MjU1LHRoaXMuc2hvdygpfSxjLnByb3RvdHlwZS5zaG93PWZ1bmN0aW9uKCl7dGhpcy5sb2FkU2hvd3x8KHRoaXMubG9hZFNob3c9ITAsdGhpcy5ub2RlLm9wYWNpdHk9MCx0aGlzLm5vZGUuYWN0aXZlPSEwLGNjLnR3ZWVuKHRoaXMubm9kZSkudG8oLjMse29wYWNpdHk6MjU1fSkuc3RhcnQoKSl9LGMucHJvdG90eXBlLmhpZGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpczt2b2lkIDA9PT1lJiYoZT0wKSxjYy5Ud2Vlbi5zdG9wQWxsQnlUYXJnZXQodGhpcy5ub2RlKSxjYy50d2Vlbih0aGlzLm5vZGUpLmRlbGF5KGUpLnRvKC4xLHtvcGFjaXR5OjB9KS5jYWxsKGZ1bmN0aW9uKCl7dC5ub2RlLmFjdGl2ZT0hMSx0LmxvYWRTaG93PSExfSkuc3RhcnQoKX0sYShbZV0sYykpO2Z1bmN0aW9uIGMoKXt2YXIgZT1udWxsIT09ciYmci5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXM7cmV0dXJuIGUubm9kZUFycj1bXSxlLnN0YXJ0UG9pbnQ9W10sZS5sb2FkU2hvdz0hMSxlfW8uZGVmYXVsdD1lIl19