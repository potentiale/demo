
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Model_4.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f8f80xsPppEWKoXpmTuuUtl', 'Model_4');
// scripts/Model_4.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
});

Object.defineProperty(o, "__esModule", {
  value: !0
}), o.Model_4 = void 0;
var a,
    r = e("AppCommon"),
    s = e("CCTool"),
    c = e("PlatformFun"),
    l = e("UserVo"),
    p = e("ListenID"),
    d = e("ElementBase"),
    u = e("GameScene"),
    f = e("EggPlug"),
    t = e("ModeBase"),
    h = e("ModelManage"),
    m = e("WarChessManage"),
    y = null,
    g = null,
    i = (a = t.ModelBase, i(_, a), _.prototype.Matching = function () {
  r["default"].MapClr.node.active = !0, r["default"].GScene.player = null, r["default"].GScene.startGame();
}, _.prototype.LoadMap = function () {
  var o = this;
  y = r["default"].GScene, (g = r["default"].MapClr).myMap.node.children[0].active = !1, cc.resources.load("tmap/Map/Map_fishmodel", cc.Prefab, function (e, t) {
    t = cc.instantiate(t);
    t.setParent(g.myMap.node), t.setPosition(0, 20), o.myChoppingBlock = t.getChildByName("choppingBlock"), o.getMap(), o.setChoppingBlock(1), o.LoadMapEnd();
  }), g.node.setContentSize(0, 0), y.GameCamera.backgroundColor = cc.color("#4c86c1"), (this.WCManage.ower = this).WCManage.init(), y.setCollision(!0), g.myMap.node.addComponent(f["default"]).newEgg.M4_Touch();
}, _.prototype.LoadMapEnd = function () {
  this.loadEndCall && this.loadEndCall(), y.setGameStart(u.GAME_STATE.ReadyAm), cc.Tween.stopAllByTarget(y.GameCamera.node), g.setTouchMoveCamera(!1), y.GameCamera.zoomRatio = 1, y.GameCamera.node.position = cc.v2(), y.GameCamera.node.active = !0, y.setPlayerStart(u.PLAYER_STATE.Not), y.setGameStart(u.GAME_STATE.CountDown), y.setPause(-999), l.UserVo.data.m4_gameGuide || s.CCTool.UI.OpenPop("prefab/pop/pop_GameGuide_M4"), s.CCTool.UI.OpenPop("prefab/game/ui/GameUI_4", {}, r["default"].MainView.GamePage), c.PlatformFun.SendEvent(r["default"].GScene.getModeStr() + "level_start"), this.Settlement();
}, _.prototype.CountDown = function () {
  y.setGameStart(u.GAME_STATE.Game), this.WCManage.roundType = m.ROUND_TYPE.USER, this.WCManage.roundStart();
}, _.prototype.Settlement = function () {
  var o = this;
  g.myMap.node.on(p.ListenID.Game_End, function () {
    o.isEnd || (0 == o.gameReviveNum ? s.CCTool.UI.OpenPop("prefab/pop/pop_GameRevive_M4") : o.GameEnd(), o.isEnd = !0);
  }, g.myMap), g.myMap.node.on(p.ListenID.Role_State, function (e, t) {
    (t = void 0 === t ? !1 : t) || o.killNum++;
  }, g.myMap), cc.resources.load("prefab/game/WCFormation/Formation_1", cc.Prefab, function (e, t) {
    t || cc.error("找不到预制体:" + name);
  });
}, _.prototype.GameStart = function () {
  r["default"].MainView.gameMsg("用咸鱼击败开朗网友！");
}, _.prototype.OnUpdate = function (e) {
  this.CDManage.OnUpdate(e);
}, _.prototype.checkGameEnd = function () {
  for (var e in this.WCManage._PointList[m.POINT_TYPE.ENEMY]) {
    e = this.WCManage._PointList[m.POINT_TYPE.ENEMY][e];
    if (e._mapPos.y <= 2 && e.type == d.Element_Type.WC_Monster) return !0;
  }

  return !1;
}, _.prototype.GameRevive = function () {
  var o = [];

  for (var e in this.WCManage._PointList[m.POINT_TYPE.ENEMY]) {
    var t = this.WCManage._PointList[m.POINT_TYPE.ENEMY][e];
    t._mapPos.y <= 5 && o.push(t);
  }

  this.gameReviveNum++;

  for (e in o) {
    !function (e) {
      var t = o[e];
      y.setPause(), cc.tween(t).delay(.5 * +e).call(function () {
        s.CCTool.Audio.Player("m4_boom"), r["default"].MapClr.newEffects(t.node.position, "bomb2"), t.setDestroyed(), y.setPause(-1);
      }).start();
    }(e);
  }

  this.isEnd = !1;
}, _.prototype.GameEnd = function () {
  this.killNum > l.UserVo.data.m4_killNumMax && (l.UserVo.data.m4_killNumMax = this.killNum, l.UserVo.SaveData()), this.SettlementData = {
    maxLv: this.getMaxLv(),
    kill: this.killNum
  }, c.PlatformFun.SendEvent(r["default"].GScene.getModeStr() + "level_finish_" + this.SettlementData.maxLv), y.setGameStart(u.GAME_STATE.End), s.CCTool.UI.OpenPop("prefab/pop/pop_GameDie_M4");
}, _.prototype.getMaxLv = function () {
  var e,
      t,
      o = 0;

  for (e in this.WCManage._PointList[m.POINT_TYPE.BATTLEFIELD]) {
    (t = this.WCManage._PointList[m.POINT_TYPE.BATTLEFIELD][e].attribute).lv > o && (o = t.lv);
  }

  for (e in this.WCManage._PointList[m.POINT_TYPE.BIRTH]) {
    (t = this.WCManage._PointList[m.POINT_TYPE.BIRTH][e].attribute).lv > o && (o = t.lv);
  }

  return o;
}, _.prototype.getHighFish = function (e) {
  e(this.WCManage.getHighFish());
}, _.prototype.setChoppingBlock = function (e) {
  if (!(e < this.myChoppingBlockNum)) {
    var t,
        o = [];
    if (5 == e) o = [1, 1, 1, 1, 1];else if (3 == e) o = [0, 1, 1, 1, 0];else {
      if (1 != e) return;
      o = [0, 0, 1, 0, 0];
    }

    for (t in o) {
      var n = this.WCManage._PointMap[m.POINT_TYPE.BIRTH][0][t];
      0 == o[t] ? this.WCManage._PointMap[m.POINT_TYPE.BIRTH][0][t] = -1 : -1 == n && 1 == o[t] && (this.WCManage._PointMap[m.POINT_TYPE.BIRTH][0][t] = 0);
    }

    for (t in o) {
      var i = this.myChoppingBlock.children[t],
          a = o[t];
      i.color = cc.color(a ? "#FFFFFF" : "#8B8B8B"), i.children[0].active = !a, i.targetOff(i), a || i.on(cc.Node.EventType.TOUCH_START, this.unlockChoppingBlock, i), a && cc.tween(i).to(.1, {
        scale: 1.1
      }).to(.2, {
        scale: 1
      }).start();
    }

    this.myChoppingBlockNum = e;
  }
}, _.prototype.setGlodChoppingBlock = function () {
  this.WCManage.isAutoSynthesis = !0;
  var e,
      t = this;

  for (e in this.myChoppingBlock.children) {
    !function (e) {
      var o = t.myChoppingBlock.children[e];
      cc.resources.load("img/model_4/glod_small", cc.SpriteFrame, function (e, t) {
        o.getComponent(cc.Sprite).spriteFrame = t;
      });
    }(e);
  }
}, _.prototype.unlockChoppingBlock = function () {
  s.CCTool.UI.OpenPop("prefab/pop/pop_M4_UnlockChoppingBlock");
}, _.prototype.getMap = function () {
  for (var n = (n = r["default"].MapClr.myMap.getLayer("Ground").getTiles()).toString().split(","), i = [], a = this, e = g.mapSize.height - 1; 0 <= e; e--) {
    !function (e) {
      i[e] = n.splice(0, g.mapSize.width), i[e] = i[e].map(Number);
      var t,
          o = 2 < e ? m.POINT_TYPE.ENEMY : 0 == e ? m.POINT_TYPE.BIRTH : 0 < e ? m.POINT_TYPE.BATTLEFIELD : void 0;

      for (t in a.WCManage._PointMap[o][e] = i[e], a.WCManage._PointMap[o][e]) {
        a.WCManage._PointMap[o][e][t] = 0;
      }
    }(e);
  }
}, _);

function _() {
  var e = null !== a && a.apply(this, arguments) || this;
  return e.type = h.GAME_MODEL.FISH_MODEL, e.mapPath = "Map_fishmodel", e.WCManage = new m.WarChessManage(), e.CDManage = new s.CCTool.CDManage({}), e.killNum = 0, e.gameReviveNum = 0, e.myChoppingBlockNum = 0, e;
}

o.Model_4 = i;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,