
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/DeadSign.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f119bSudTxI052qios3EULR', 'DeadSign');
// scripts/DeadSign.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    s = e("AppCommon"),
    c = e("ModelManage"),
    l = e("EggBase"),
    t = cc._decorator,
    e = t.ccclass,
    t = t.property,
    e = (r = l["default"], i(p, r), p.prototype.onLoad = function () {
  this.node.children[0].getComponent(cc.Sprite).spriteFrame = s["default"].GScene._GameModel === c.GAME_MODEL.TANG_PING ? this.signSprite[1] : this.signSprite[0];
}, p.prototype.start = function () {
  var e = this,
      t = s["default"].GScene._GameModel === c.GAME_MODEL.TANG_PING ? "又菜又苟" : "又卷又菜",
      o = this.node.getComponent(cc.Animation);
  o && (o = o.play(), this.scheduleOnce(function () {
    s["default"].MapClr.newDialogue(e.node, cc.v2(20, 70), t, 1.5);
  }, o.duration));
}, a([t([cc.SpriteFrame])], p.prototype, "signSprite", void 0), a([e], p));

function p() {
  var e = null !== r && r.apply(this, arguments) || this;
  return e.signSprite = [], e;
}

o["default"] = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcRGVhZFNpZ24uanMiXSwibmFtZXMiOlsiZSIsInJlcXVpcmUiLCJ0IiwibW9kdWxlIiwibyIsImV4cG9ydHMiLCJuIiwiaSIsIl9fZXh0ZW5kcyIsIk9iamVjdCIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJjb25zdHJ1Y3RvciIsImNyZWF0ZSIsImEiLCJfX2RlY29yYXRlIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlJlZmxlY3QiLCJkZWNvcmF0ZSIsInMiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiYyIsImwiLCJjYyIsIl9kZWNvcmF0b3IiLCJjY2NsYXNzIiwicHJvcGVydHkiLCJwIiwib25Mb2FkIiwibm9kZSIsImNoaWxkcmVuIiwiZ2V0Q29tcG9uZW50IiwiU3ByaXRlIiwic3ByaXRlRnJhbWUiLCJHU2NlbmUiLCJfR2FtZU1vZGVsIiwiR0FNRV9NT0RFTCIsIlRBTkdfUElORyIsInNpZ25TcHJpdGUiLCJzdGFydCIsIkFuaW1hdGlvbiIsInBsYXkiLCJzY2hlZHVsZU9uY2UiLCJNYXBDbHIiLCJuZXdEaWFsb2d1ZSIsInYyIiwiZHVyYXRpb24iLCJTcHJpdGVGcmFtZSIsImFwcGx5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUMsR0FBQ0MsT0FBTjtBQUNBLElBQUlDLENBQUMsR0FBQ0MsTUFBTjtBQUNBLElBQUlDLENBQUMsR0FBQ0MsT0FBTjtBQUNBOztBQUFhLElBQUlDLEVBQUo7QUFBQSxJQUFNQyxDQUFDLEdBQUMsVUFBTSxTQUFLQyxTQUFYLEtBQXVCRixFQUFDLEdBQUMsV0FBU04sQ0FBVCxFQUFXRSxDQUFYLEVBQWE7QUFBQyxTQUFNLENBQUNJLEVBQUMsR0FBQ0csTUFBTSxDQUFDQyxjQUFQLElBQXVCO0FBQUNDLElB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QUFDeEIsSUFBQUEsQ0FBQyxXQUFELENBQVV5QixNQUFWLENBQWlCQyxXQUFqQixDQUE2QnBELENBQUMsQ0FBQ3FDLElBQS9CLEVBQW9DTixFQUFFLENBQUNzQixFQUFILENBQU0sRUFBTixFQUFTLEVBQVQsQ0FBcEMsRUFBaURuRCxDQUFqRCxFQUFtRCxHQUFuRDtBQUF3RCxHQUFyRixFQUFzRkUsQ0FBQyxDQUFDa0QsUUFBeEYsQ0FBZCxDQUFEO0FBQWtILENBQTdjLEVBQThjcEMsQ0FBQyxDQUFDLENBQUNoQixDQUFDLENBQUMsQ0FBQzZCLEVBQUUsQ0FBQ3dCLFdBQUosQ0FBRCxDQUFGLENBQUQsRUFBdUJwQixDQUFDLENBQUN0QixTQUF6QixFQUFtQyxZQUFuQyxFQUFnRCxLQUFLLENBQXJELENBQS9jLEVBQXVnQkssQ0FBQyxDQUFDLENBQUNsQixDQUFELENBQUQsRUFBS21DLENBQUwsQ0FBMWdCLENBQW5HOztBQUFzbkIsU0FBU0EsQ0FBVCxHQUFZO0FBQUMsTUFBSW5DLENBQUMsR0FBQyxTQUFPc0IsQ0FBUCxJQUFVQSxDQUFDLENBQUNrQyxLQUFGLENBQVEsSUFBUixFQUFhcEMsU0FBYixDQUFWLElBQW1DLElBQXpDO0FBQThDLFNBQU9wQixDQUFDLENBQUM4QyxVQUFGLEdBQWEsRUFBYixFQUFnQjlDLENBQXZCO0FBQXlCOztBQUFBSSxDQUFDLFdBQUQsR0FBVUosQ0FBViIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGU9cmVxdWlyZTtcbnZhciB0PW1vZHVsZTtcbnZhciBvPWV4cG9ydHM7XG5cInVzZSBzdHJpY3RcIjt2YXIgbixpPXRoaXMmJnRoaXMuX19leHRlbmRzfHwobj1mdW5jdGlvbihlLHQpe3JldHVybihuPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbihlLHQpe2UuX19wcm90b19fPXR9fHxmdW5jdGlvbihlLHQpe2Zvcih2YXIgbyBpbiB0KU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LG8pJiYoZVtvXT10W29dKX0pKGUsdCl9LGZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gbygpe3RoaXMuY29uc3RydWN0b3I9ZX1uKGUsdCksZS5wcm90b3R5cGU9bnVsbD09PXQ/T2JqZWN0LmNyZWF0ZSh0KTooby5wcm90b3R5cGU9dC5wcm90b3R5cGUsbmV3IG8pfSksYT10aGlzJiZ0aGlzLl9fZGVjb3JhdGV8fGZ1bmN0aW9uKGUsdCxvLG4pe3ZhciBpLGE9YXJndW1lbnRzLmxlbmd0aCxyPWE8Mz90Om51bGw9PT1uP249T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LG8pOm47aWYoXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUpcj1SZWZsZWN0LmRlY29yYXRlKGUsdCxvLG4pO2Vsc2UgZm9yKHZhciBzPWUubGVuZ3RoLTE7MDw9cztzLS0pKGk9ZVtzXSkmJihyPShhPDM/aShyKTozPGE/aSh0LG8scik6aSh0LG8pKXx8cik7cmV0dXJuIDM8YSYmciYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsbyxyKSxyfTtPYmplY3QuZGVmaW5lUHJvcGVydHkobyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcixzPWUoXCJBcHBDb21tb25cIiksYz1lKFwiTW9kZWxNYW5hZ2VcIiksbD1lKFwiRWdnQmFzZVwiKSx0PWNjLl9kZWNvcmF0b3IsZT10LmNjY2xhc3MsdD10LnByb3BlcnR5LGU9KHI9bC5kZWZhdWx0LGkocCxyKSxwLnByb3RvdHlwZS5vbkxvYWQ9ZnVuY3Rpb24oKXt0aGlzLm5vZGUuY2hpbGRyZW5bMF0uZ2V0Q29tcG9uZW50KGNjLlNwcml0ZSkuc3ByaXRlRnJhbWU9cy5kZWZhdWx0LkdTY2VuZS5fR2FtZU1vZGVsPT09Yy5HQU1FX01PREVMLlRBTkdfUElORz90aGlzLnNpZ25TcHJpdGVbMV06dGhpcy5zaWduU3ByaXRlWzBdfSxwLnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbigpe3ZhciBlPXRoaXMsdD1zLmRlZmF1bHQuR1NjZW5lLl9HYW1lTW9kZWw9PT1jLkdBTUVfTU9ERUwuVEFOR19QSU5HP1wi5Y+I6I+c5Y+I6IufXCI6XCLlj4jljbflj4joj5xcIixvPXRoaXMubm9kZS5nZXRDb21wb25lbnQoY2MuQW5pbWF0aW9uKTtvJiYobz1vLnBsYXkoKSx0aGlzLnNjaGVkdWxlT25jZShmdW5jdGlvbigpe3MuZGVmYXVsdC5NYXBDbHIubmV3RGlhbG9ndWUoZS5ub2RlLGNjLnYyKDIwLDcwKSx0LDEuNSl9LG8uZHVyYXRpb24pKX0sYShbdChbY2MuU3ByaXRlRnJhbWVdKV0scC5wcm90b3R5cGUsXCJzaWduU3ByaXRlXCIsdm9pZCAwKSxhKFtlXSxwKSk7ZnVuY3Rpb24gcCgpe3ZhciBlPW51bGwhPT1yJiZyLmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpcztyZXR1cm4gZS5zaWduU3ByaXRlPVtdLGV9by5kZWZhdWx0PWUiXX0=