
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/AITag.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '58b95DbTxdNpo45dKVIPjQs', 'AITag');
// scripts/AITag.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    s = e("AppCommon"),
    c = e("CCTool"),
    l = e("pop"),
    p = e("GameScene"),
    d = e("ModelManage"),
    t = cc._decorator,
    e = t.ccclass,
    t = t.property,
    e = (r = l["default"], i(u, r), u.prototype.onLoad = function () {
  "AITag" != this.node.name && this.initFun[this.node.name]();
}, u.prototype.refreshMsg = function () {
  var e, t, o;
  s["default"].GScene._GameState == p.GAME_STATE.Game && (o = "AI-" + (t = (e = this.pdata).myAIBuild)._AiParameter.id + " " + t._AiParameter.name + " _hp:" + e.myDoor._life + " _atk:" + e.myCapabilities.atk + "\n\n", o += "_产能：" + JSON.stringify(t._AiParameter) + "\n\n", o += "_战力：" + JSON.stringify(e.myCapabilities) + "\n\n", o += "_钱包：" + JSON.stringify(e.wallet) + "\n\n", o += "_当前决策：" + JSON.stringify(t.getPolicy) + "\n\n", o += "_等待建造：" + JSON.stringify(t.waitingBuild) + "\n\n", s["default"].GScene._GameModel == d.GAME_MODEL.TANG_PING && (o += "怪物属性：" + JSON.stringify(s["default"].MapClr.monsterList[0].attribute) + " _exp:" + s["default"].MapClr.monsterList[0]._exp + "\n\n"), this.text.string = o += "\n\n\n\n");
}, u.prototype.onButton = function (e, t) {
  switch (cc.log(t), e && c.CCTool.Audio.Player("Click"), t) {
    case "AIDataView":
      c.CCTool.UI.OpenPop("prefab/AITest/" + t, this.ower);
      break;

    case "Close":
      this.close();
  }
}, a([t(cc.RichText)], u.prototype, "text", void 0), a([e], u));

function u() {
  var t = null !== r && r.apply(this, arguments) || this;
  return t.text = null, t.initFun = {
    AITag: function AITag(e) {
      t.ower = e, t.node.setPosition(0, 130), t.node.children[0].getComponent(cc.Label).string = "AI-" + e.myAIBuild._AiParameter.id;
    },
    AIDataView: function AIDataView() {
      t.refreshMsg(), t.schedule(t.refreshMsg, 1), t.node.setPosition(0, -cc.winSize.height / 2);
    }
  }, t;
}

o["default"] = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcQUlUYWcuanMiXSwibmFtZXMiOlsiZSIsInJlcXVpcmUiLCJ0IiwibW9kdWxlIiwibyIsImV4cG9ydHMiLCJuIiwiaSIsIl9fZXh0ZW5kcyIsIk9iamVjdCIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJjb25zdHJ1Y3RvciIsImNyZWF0ZSIsImEiLCJfX2RlY29yYXRlIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlJlZmxlY3QiLCJkZWNvcmF0ZSIsInMiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiYyIsImwiLCJwIiwiZCIsImNjIiwiX2RlY29yYXRvciIsImNjY2xhc3MiLCJwcm9wZXJ0eSIsInUiLCJvbkxvYWQiLCJub2RlIiwibmFtZSIsImluaXRGdW4iLCJyZWZyZXNoTXNnIiwiR1NjZW5lIiwiX0dhbWVTdGF0ZSIsIkdBTUVfU1RBVEUiLCJHYW1lIiwicGRhdGEiLCJteUFJQnVpbGQiLCJfQWlQYXJhbWV0ZXIiLCJpZCIsIm15RG9vciIsIl9saWZlIiwibXlDYXBhYmlsaXRpZXMiLCJhdGsiLCJKU09OIiwic3RyaW5naWZ5Iiwid2FsbGV0IiwiZ2V0UG9saWN5Iiwid2FpdGluZ0J1aWxkIiwiX0dhbWVNb2RlbCIsIkdBTUVfTU9ERUwiLCJUQU5HX1BJTkciLCJNYXBDbHIiLCJtb25zdGVyTGlzdCIsImF0dHJpYnV0ZSIsIl9leHAiLCJ0ZXh0Iiwic3RyaW5nIiwib25CdXR0b24iLCJsb2ciLCJDQ1Rvb2wiLCJBdWRpbyIsIlBsYXllciIsIlVJIiwiT3BlblBvcCIsIm93ZXIiLCJjbG9zZSIsIlJpY2hUZXh0IiwiYXBwbHkiLCJBSVRhZyIsInNldFBvc2l0aW9uIiwiY2hpbGRyZW4iLCJnZXRDb21wb25lbnQiLCJMYWJlbCIsIkFJRGF0YVZpZXciLCJzY2hlZHVsZSIsIndp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akUsQ0FBQyxDQUFDdUMsT0FBRixHQUFVO0FBQUN1QyxJQUFBQSxLQUFLLEVBQUMsZUFBU2hGLENBQVQsRUFBVztBQUFDRSxNQUFBQSxDQUFDLENBQUMwRSxJQUFGLEdBQU81RSxDQUFQLEVBQVNFLENBQUMsQ0FBQ3FDLElBQUYsQ0FBTzBDLFdBQVAsQ0FBbUIsQ0FBbkIsRUFBcUIsR0FBckIsQ0FBVCxFQUFtQy9FLENBQUMsQ0FBQ3FDLElBQUYsQ0FBTzJDLFFBQVAsQ0FBZ0IsQ0FBaEIsRUFBbUJDLFlBQW5CLENBQWdDbEQsRUFBRSxDQUFDbUQsS0FBbkMsRUFBMENoQixNQUExQyxHQUFpRCxRQUFNcEUsQ0FBQyxDQUFDZ0QsU0FBRixDQUFZQyxZQUFaLENBQXlCQyxFQUFuSDtBQUFzSCxLQUF6STtBQUEwSW1DLElBQUFBLFVBQVUsRUFBQyxzQkFBVTtBQUFDbkYsTUFBQUEsQ0FBQyxDQUFDd0MsVUFBRixJQUFleEMsQ0FBQyxDQUFDb0YsUUFBRixDQUFXcEYsQ0FBQyxDQUFDd0MsVUFBYixFQUF3QixDQUF4QixDQUFmLEVBQTBDeEMsQ0FBQyxDQUFDcUMsSUFBRixDQUFPMEMsV0FBUCxDQUFtQixDQUFuQixFQUFxQixDQUFDaEQsRUFBRSxDQUFDc0QsT0FBSCxDQUFXQyxNQUFaLEdBQW1CLENBQXhDLENBQTFDO0FBQXFGO0FBQXJQLEdBQXRCLEVBQTZRdEYsQ0FBcFI7QUFBc1I7O0FBQUFFLENBQUMsV0FBRCxHQUFVSixDQUFWIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZT1yZXF1aXJlO1xudmFyIHQ9bW9kdWxlO1xudmFyIG89ZXhwb3J0cztcblwidXNlIHN0cmljdFwiO3ZhciBuLGk9dGhpcyYmdGhpcy5fX2V4dGVuZHN8fChuPWZ1bmN0aW9uKGUsdCl7cmV0dXJuKG49T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKGUsdCl7ZS5fX3Byb3RvX189dH18fGZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBvIGluIHQpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsbykmJihlW29dPXRbb10pfSkoZSx0KX0sZnVuY3Rpb24oZSx0KXtmdW5jdGlvbiBvKCl7dGhpcy5jb25zdHJ1Y3Rvcj1lfW4oZSx0KSxlLnByb3RvdHlwZT1udWxsPT09dD9PYmplY3QuY3JlYXRlKHQpOihvLnByb3RvdHlwZT10LnByb3RvdHlwZSxuZXcgbyl9KSxhPXRoaXMmJnRoaXMuX19kZWNvcmF0ZXx8ZnVuY3Rpb24oZSx0LG8sbil7dmFyIGksYT1hcmd1bWVudHMubGVuZ3RoLHI9YTwzP3Q6bnVsbD09PW4/bj1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsbyk6bjtpZihcIm9iamVjdFwiPT10eXBlb2YgUmVmbGVjdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSlyPVJlZmxlY3QuZGVjb3JhdGUoZSx0LG8sbik7ZWxzZSBmb3IodmFyIHM9ZS5sZW5ndGgtMTswPD1zO3MtLSkoaT1lW3NdKSYmKHI9KGE8Mz9pKHIpOjM8YT9pKHQsbyxyKTppKHQsbykpfHxyKTtyZXR1cm4gMzxhJiZyJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLHIpLHJ9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShvLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciByLHM9ZShcIkFwcENvbW1vblwiKSxjPWUoXCJDQ1Rvb2xcIiksbD1lKFwicG9wXCIpLHA9ZShcIkdhbWVTY2VuZVwiKSxkPWUoXCJNb2RlbE1hbmFnZVwiKSx0PWNjLl9kZWNvcmF0b3IsZT10LmNjY2xhc3MsdD10LnByb3BlcnR5LGU9KHI9bC5kZWZhdWx0LGkodSxyKSx1LnByb3RvdHlwZS5vbkxvYWQ9ZnVuY3Rpb24oKXtcIkFJVGFnXCIhPXRoaXMubm9kZS5uYW1lJiZ0aGlzLmluaXRGdW5bdGhpcy5ub2RlLm5hbWVdKCl9LHUucHJvdG90eXBlLnJlZnJlc2hNc2c9ZnVuY3Rpb24oKXt2YXIgZSx0LG87cy5kZWZhdWx0LkdTY2VuZS5fR2FtZVN0YXRlPT1wLkdBTUVfU1RBVEUuR2FtZSYmKG89XCJBSS1cIisodD0oZT10aGlzLnBkYXRhKS5teUFJQnVpbGQpLl9BaVBhcmFtZXRlci5pZCtcIiBcIit0Ll9BaVBhcmFtZXRlci5uYW1lK1wiIF9ocDpcIitlLm15RG9vci5fbGlmZStcIiBfYXRrOlwiK2UubXlDYXBhYmlsaXRpZXMuYXRrK1wiXFxuXFxuXCIsbys9XCJf5Lqn6IO977yaXCIrSlNPTi5zdHJpbmdpZnkodC5fQWlQYXJhbWV0ZXIpK1wiXFxuXFxuXCIsbys9XCJf5oiY5Yqb77yaXCIrSlNPTi5zdHJpbmdpZnkoZS5teUNhcGFiaWxpdGllcykrXCJcXG5cXG5cIixvKz1cIl/pkrHljIXvvJpcIitKU09OLnN0cmluZ2lmeShlLndhbGxldCkrXCJcXG5cXG5cIixvKz1cIl/lvZPliY3lhrPnrZbvvJpcIitKU09OLnN0cmluZ2lmeSh0LmdldFBvbGljeSkrXCJcXG5cXG5cIixvKz1cIl/nrYnlvoXlu7rpgKDvvJpcIitKU09OLnN0cmluZ2lmeSh0LndhaXRpbmdCdWlsZCkrXCJcXG5cXG5cIixzLmRlZmF1bHQuR1NjZW5lLl9HYW1lTW9kZWw9PWQuR0FNRV9NT0RFTC5UQU5HX1BJTkcmJihvKz1cIuaAqueJqeWxnuaAp++8mlwiK0pTT04uc3RyaW5naWZ5KHMuZGVmYXVsdC5NYXBDbHIubW9uc3Rlckxpc3RbMF0uYXR0cmlidXRlKStcIiBfZXhwOlwiK3MuZGVmYXVsdC5NYXBDbHIubW9uc3Rlckxpc3RbMF0uX2V4cCtcIlxcblxcblwiKSx0aGlzLnRleHQuc3RyaW5nPW8rPVwiXFxuXFxuXFxuXFxuXCIpfSx1LnByb3RvdHlwZS5vbkJ1dHRvbj1mdW5jdGlvbihlLHQpe3N3aXRjaChjYy5sb2codCksZSYmYy5DQ1Rvb2wuQXVkaW8uUGxheWVyKFwiQ2xpY2tcIiksdCl7Y2FzZVwiQUlEYXRhVmlld1wiOmMuQ0NUb29sLlVJLk9wZW5Qb3AoXCJwcmVmYWIvQUlUZXN0L1wiK3QsdGhpcy5vd2VyKTticmVhaztjYXNlXCJDbG9zZVwiOnRoaXMuY2xvc2UoKX19LGEoW3QoY2MuUmljaFRleHQpXSx1LnByb3RvdHlwZSxcInRleHRcIix2b2lkIDApLGEoW2VdLHUpKTtmdW5jdGlvbiB1KCl7dmFyIHQ9bnVsbCE9PXImJnIuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzO3JldHVybiB0LnRleHQ9bnVsbCx0LmluaXRGdW49e0FJVGFnOmZ1bmN0aW9uKGUpe3Qub3dlcj1lLHQubm9kZS5zZXRQb3NpdGlvbigwLDEzMCksdC5ub2RlLmNoaWxkcmVuWzBdLmdldENvbXBvbmVudChjYy5MYWJlbCkuc3RyaW5nPVwiQUktXCIrZS5teUFJQnVpbGQuX0FpUGFyYW1ldGVyLmlkfSxBSURhdGFWaWV3OmZ1bmN0aW9uKCl7dC5yZWZyZXNoTXNnKCksdC5zY2hlZHVsZSh0LnJlZnJlc2hNc2csMSksdC5ub2RlLnNldFBvc2l0aW9uKDAsLWNjLndpblNpemUuaGVpZ2h0LzIpfX0sdH1vLmRlZmF1bHQ9ZSJdfQ==