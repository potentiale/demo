
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ShopItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e2430TpJSxEOIRJVuUHrNBj', 'ShopItem');
// scripts/ShopItem.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    s = e("AppCommon"),
    c = e("CCTool"),
    l = e("PlatformFun"),
    p = e("UserVo"),
    d = e("GridViewCell"),
    u = e("Cfg"),
    t = cc._decorator,
    e = t.ccclass,
    t = t.property,
    e = (r = d["default"], i(f, r), f.prototype.onInit = function () {}, f.prototype.onRefresh = function (e) {
  var o = this;

  if (this.shopInfo = e, this.shopInfo) {
    switch (this.bData = u.Cfg.Building1.get(this.shopInfo.itemID), this.labelArr[0].string = this.bData.name, this.bData.buildingType) {
      case 1:
        this.labelArr[1].string = s["default"].strReplace(this.bData.introduction, this.bData.outputCoin);
        break;

      case 2:
        this.labelArr[1].string = s["default"].strReplace(this.bData.introduction, this.bData.atk, this.bData.atkRadius);
        break;

      case 3:
        this.labelArr[1].string = s["default"].strReplace(this.bData.introduction, this.bData.hp);
        break;

      case 4:
        this.labelArr[1].string = s["default"].strReplace(this.bData.introduction, this.bData.outputPower);
        break;

      case 5:
        this.labelArr[1].string = s["default"].strReplace(this.bData.introduction, this.bData.outputCoin);
        break;

      default:
        this.labelArr[1].string = this.bData.introduction;
    }

    this._updateCount(), cc.resources.load("img/gameIcon/" + this.bData.id, cc.SpriteFrame, function (e, t) {
      o.SpriteArr[0].spriteFrame = t;
    }), this.setBuy(), l.PlatformFun.SendEvent("shop_show_vedio_" + this.bData.buildingType);
  }
}, f.prototype._updateCount = function () {
  this.labelArr[2].string = "" + p.UserVo.getBuildingNumById(this.shopInfo.itemID);
}, f.prototype.setBuy = function () {
  for (var e = 0, t = this.nodeArr.length; e < t; e++) {
    var o = this.nodeArr[e];
    o.active = this.shopInfo.type - 1 == e, o.active && 0 == e && (o.children[1].getComponent(cc.Label).string = "" + this.shopInfo.price);
  }
}, f.prototype.onButton = function (e, t) {
  var o = this;

  switch (t) {
    case "Buy":
      if (l.PlatformFun.SendEvent("shop_buy_" + this.bData.buildingType), this.shopInfo.price > p.UserVo.fish) return c.CCTool.UI.ShowToast("摸鱼币不足");
      p.UserVo.SetFish(-this.shopInfo.price), p.UserVo.addBuildingNumById(this.shopInfo.itemID, 1), this._updateCount(), c.CCTool.UI.ShowToast("购买成功");
      break;

    case "VideoBuy":
      l.PlatformFun.loadRewardedVideoAd({
        onVideoSuccess: function onVideoSuccess() {
          p.UserVo.addBuildingNumById(o.shopInfo.itemID, 1), c.CCTool.UI.ShowToast("购买成功"), o._updateCount();
        },
        loadSuccess: function loadSuccess() {}
      }), l.PlatformFun.SendEvent("shop_click_vedio_" + this.bData.buildingType);
  }
}, a([t([cc.Node])], f.prototype, "nodeArr", void 0), a([t([cc.Label])], f.prototype, "labelArr", void 0), a([t([cc.Sprite])], f.prototype, "SpriteArr", void 0), a([e], f));

function f() {
  var e = null !== r && r.apply(this, arguments) || this;
  return e.nodeArr = [], e.labelArr = [], e.SpriteArr = [], e.shopInfo = null, e.bData = null, e;
}

o["default"] = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,