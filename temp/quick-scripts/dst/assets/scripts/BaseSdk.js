
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/BaseSdk.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8a839XDuHdCbZZsinBNJbFC', 'BaseSdk');
// scripts/BaseSdk.js

"use strict";

var o = require;
var e = module;
var t = exports;
"use strict";

var i = void 0 && (void 0).__spreadArrays || function () {
  for (var e = 0, t = 0, o = arguments.length; t < o; t++) {
    e += arguments[t].length;
  }

  for (var n = Array(e), i = 0, t = 0; t < o; t++) {
    for (var a = arguments[t], r = 0, s = a.length; r < s; r++, i++) {
      n[i] = a[r];
    }
  }

  return n;
};

Object.defineProperty(t, "__esModule", {
  value: !0
}), t.BaseSdk = t.GAMEPF_DATA = t.GAMEPF = t.AD_TYPE = void 0;
var n,
    a = o("AppCommon");
(r = n = t.AD_TYPE || (t.AD_TYPE = {}))[r.NativeVideo = 2] = "NativeVideo", r[r.RewardVideo = 3] = "RewardVideo", r[r.FullScreenVideo = 4] = "FullScreenVideo", r[r.Banner = 5] = "Banner", r[r.NativeBanner = 6] = "NativeBanner", r[r.FullScreenImg = 8] = "FullScreenImg", r[r.NativeBigImgBanner = 9] = "NativeBigImgBanner", r[r.NativeBox = 20] = "NativeBox", r[r.NativeBox_55 = 21] = "NativeBox_55", r[r.QQbox = 22] = "QQbox", r[r.Splash = 99] = "Splash";
var r = (s.isADR = function () {
  return 0 <= a["default"].PF.indexOf(this.ADR);
}, s.isMINGAME = function () {
  return 0 <= [this.WX, this.TT, this.QQ, this.KS, this.MIN_OPPO, this.MIN_VIVO, this.MIN_OPPO_HAIWAI].indexOf(a["default"].PF);
}, s.sendJsbCall = function (e) {
  for (var t = [], o = 1; o < arguments.length; o++) {
    t[o - 1] = arguments[o];
  }

  var n = (s.defaultClass[a["default"].PF] || s.defaultClass[s.ADR])[0];
  return 1 < t.length ? s.jsbCall.apply(s, i([n, e], t)) : 1 == t.length ? s.jsbCall(n, e, t[0]) : s.jsbCall(n, e);
}, s.NOT = "--", s.WX = "WX", s.TT = "TT", s.IOS = "IOS", s.ADR = "ADR", s.QQ = "QQ", s.KS = "KS", s.WEB = "WEB", s.MIN_OPPO = "MIN_OPPO", s.MIN_OPPO_HAIWAI = "MIN_OPPO_HAIWAI", s.MIN_VIVO = "MIN_VIVO", s.ADR_OWN = "ADR_OWN", s.ADR_OPPO = "ADR_OPPO", s.ADR_XM = "ADR_XM", s.ADR_MMY = "ADR_MMY", s.ADR_TapTap = "ADR_TapTap", s.ADR_233 = "ADR_233", s.ADR_HYKB = "ADR_HYKB", s.ADR_HAIWAI = "ADR_HAIWAI", s.ADR_7723 = "ADR_7723", s.ADR_HLX = "ADR_HLX", s.defaultClass = ((e = {})[s.ADR] = ["org/cocos2dx/javascript/AppActivity", "()V"], e[s.ADR_XM] = ["com/wonder/xiaomi/XiaomiSdk", "()V"], e[s.IOS] = ["AppController", ""], e), s.jsbCall = window.jsb && jsb.reflection ? jsb.reflection.callStaticMethod : function (e, t) {
  for (var o = [], n = 2; n < arguments.length; n++) {
    o[n - 2] = arguments[n];
  }

  cc.log.apply(cc, i([e, t], o));
}, s);

function s() {}

t.GAMEPF = r;
c.GetClass = function () {
  var e = this.SDK_CLASS[a["default"].PF];
  if (!e) return null;
  var t = o(e);
  return new (t[e] || t["default"])();
}, c.PF_SET = ((e = {})[r.TT] = {
  v: "1.3.2",
  t: "tpmy_TT",
  l: "zh",
  ad: !0
}, e[r.WEB] = {
  v: "1.0.1",
  t: "tpmy_TEST",
  l: "zh",
  ad: !1
}, e[r.WX] = {
  v: "1.0.3",
  t: "tpmy_WX",
  l: "zh",
  ad: !0
}, e[r.IOS] = {
  v: "1.0.1",
  t: "tpmy_IOS",
  l: "zh",
  ad: !0
}, e[r.ADR_OWN] = {
  t: "tpmy_Android",
  v: "1.0.0.6fxrjh",
  l: "zh",
  ad: !0
}, e[r.ADR_HYKB] = {
  t: "tpmy_Android",
  v: "1.0.1.1hykb",
  l: "zh",
  ad: !0
}, e[r.ADR_MMY] = {
  t: "tpmy_Android",
  v: "1.0.2.3mmy",
  l: "zh",
  ad: !0
}, e[r.ADR_TapTap] = {
  t: "tpmy_Android",
  v: "1.0.1.2taptap",
  l: "zh",
  ad: !0
}, e[r.ADR_HLX] = {
  t: "tpmy_Android",
  v: "1.0.1.4hlx",
  l: "zh",
  ad: !0
}, e[r.ADR_7723] = {
  t: "tpmy_Android",
  v: "1.0.1.5qqes",
  l: "zh",
  ad: !0
}, e[r.ADR_XM] = {
  t: "tpmy_Android",
  v: "1.0.0.7xm",
  l: "zh",
  ad: !0
}, e), c.SDK_CLASS = ((e = {})[r.IOS] = "IOSSdk", e[r.ADR_OWN] = "ZiJia_AdrSdk", e[r.ADR_XM] = "Xiaomi_AdrSdk", e[r.WX] = "MinGameSdk", e[r.TT] = "MinGameSdk", e), e = c;

function c() {}

t.GAMEPF_DATA = e;
l.prototype.sendJsbCall = function (e) {
  for (var t = [], o = 1; o < arguments.length; o++) {
    t[o - 1] = arguments[o];
  }

  console.log("[sendJsbCall]" + e + JSON.stringify(t));
  var n = this.defaultClass;
  return 1 < t.length ? this.jsbCall.apply(this, i([n[0], e], t)) : 1 == t.length ? this.jsbCall(n[0], e, t[0]) : this.jsbCall(n[0], e);
}, l.prototype.hideNativeAd = function () {
  throw new Error("Method not implemented.");
}, l.prototype.hideInsertAd = function () {
  throw new Error("Method not implemented.");
}, l.prototype.onLoadSuccess = function () {
  throw new Error("Method not implemented.");
}, l.prototype.destroyBannerAd = function () {
  throw new Error("Method not implemented.");
}, l.prototype.hideBannerAd = function () {
  throw new Error("Method not implemented.");
}, l.prototype.onVideoSuccess = function () {}, l.prototype.onVideoClose = function () {}, l.prototype.onVideoError = function () {}, l.prototype.sendEvent = function () {
  throw new Error("Method not implemented.");
}, l.prototype.vibrate = function () {
  throw new Error("Method not implemented.");
}, l.prototype.ShowPrivacy = function () {
  throw new Error("Method not implemented.");
}, l.prototype.getNatId = function () {}, e = l;

function l() {
  var e;
  this.defaultClass = ["com/wonder/xiaomi/XiaomiSdk", "()V"], this.jsbCall = window.jsb && jsb.reflection ? jsb.reflection.callStaticMethod : function (e, t) {
    cc.log("[jsbCall]-" + t);
  }, this.isGetVideoReward = !1, this.showAd = ((e = {})[n.RewardVideo] = function () {}, e[n.FullScreenVideo] = function () {}, e[n.Banner] = function () {}, e[n.NativeVideo] = function () {}, e[n.NativeBanner] = function () {}, e[n.FullScreenImg] = function () {}, e[n.Splash] = function () {}, e), this.myPF = a["default"].PF, cc.log("[BaseSdk]constructor", this.myPF);
}

t.BaseSdk = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,