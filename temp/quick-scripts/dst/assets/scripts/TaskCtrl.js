
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/TaskCtrl.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0f93cXj2gpBFIZGYSFYh3YR', 'TaskCtrl');
// scripts/TaskCtrl.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

Object.defineProperty(o, "__esModule", {
  value: !0
}), o.TaskType = void 0;
var n = e("AppCommon"),
    i = e("CCTool"),
    c = e("UserVo"),
    l = e("ListenID"),
    p = e("Notifier"),
    d = e("Cfg"),
    a = o.TaskType || (o.TaskType = {});
a[a.GetBuilding = 1] = "GetBuilding";
r.prototype.initTask = function (e) {
  this.taskCfgList = d.Cfg.Task.filter({
    mode: e
  }), this.taskCfgList.sort(function (e, t) {
    return e.id - t.id;
  }), this.curTaskMode = e, this._taskInfo = {};

  for (var t = 0, o = this.taskCfgList.length; t < o; t++) {
    for (var n = this.taskCfgList[t], i = n.target[n.target.length - 1], a = [], r = 0, s = n.target.length - 1; r < s; r++) {
      a.push(n.target[r]);
    }

    i = {
      taskId: n.id,
      target: a,
      curPro: 0,
      allPro: i
    };
    this._taskInfo[n.id] = i;
  }

  this._curFinishNum = 0, c.UserVo.getTaskInfo()[e] || (e = this.taskCfgList[this._curFinishNum]) && p.Notifier.send(l.ListenID.Task_ShowTarget, e, this._taskInfo[e.id]);
}, r.prototype.updateTask = function (e, t) {
  if (e == a.GetBuilding) for (var o in this._taskInfo) {
    o = this._taskInfo[o];
    -1 != o.target.indexOf(t.buildId) && (o.curPro += 1, p.Notifier.send(l.ListenID.Task_UpdateTarget, o));
  }
}, r.prototype.finishTask = function (e, t) {
  var o = this.taskCfgList[this._curFinishNum];
  e != o.id && console.warn("任务id不对", e, o.id), n["default"].GScene.player && n["default"].GScene.player.setCoin(o.reward);
  e = cc.v2(0, 0);
  t && (t = t.parent.convertToWorldSpaceAR(t.position), e = n["default"].MainView.PopBox.convertToNodeSpaceAR(t)), i.CCTool.UI.showCurrencyTips("Fish coin", o.reward, !0, e), this._curFinishNum++;
  e = this.taskCfgList[this._curFinishNum];
  e ? p.Notifier.send(l.ListenID.Task_ShowTarget, e, this._taskInfo[e.id]) : c.UserVo.setTaskModeFinish(this.curTaskMode);
}, e = r;

function r() {
  this.taskCfgList = [], this._taskInfo = {}, this.curTaskMode = -1, this._curFinishNum = 0, p.Notifier.addListener(l.ListenID.Task_UpdateTask, this.updateTask, this), p.Notifier.addListener(l.ListenID.Task_FinishTask, this.finishTask, this);
}

o["default"] = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,