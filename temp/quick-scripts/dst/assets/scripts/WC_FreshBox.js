
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/WC_FreshBox.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '220e8m2kxNBVKO9YjbE2Y1T', 'WC_FreshBox');
// scripts/WC_FreshBox.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    s = e("AppCommon"),
    c = e("ListenID"),
    l = e("ElementBase"),
    p = e("WarChessBase"),
    d = cc._decorator,
    t = d.ccclass,
    e = d.menu,
    e = (d.property, r = p.WarChessBase, i(u, r), u.prototype.onInit = function () {
  var e = this;
  s["default"].MapClr.myMap.node.on(c.ListenID.WC_Monster_Move, function () {
    e._isActive && e.moveTo({
      x: 0,
      y: -1
    });
  }, this);
}, u.prototype.initAttribute = function (e) {
  this.imgList[0] = this.node.children[0].getComponent(cc.Sprite), this.myMals = this.imgList[0].getMaterial(0), "string" == typeof e.parameter && (e.parameter = JSON.parse(e.parameter)), this.setAttribute(e), this.getZIndex(), this.onInit();
}, u.prototype.setAttribute = function (e) {
  this.attribute = {
    name: e.name,
    lv: e.level,
    data: e
  }, this._life = e.hp || 1, this.setLife(0), this.setConstructImg(this.imgList[0], this.attribute.data.seed), this.setState(!0);
}, u.prototype.getHurt = function (e) {
  r.prototype.getHurt.call(this, e), this.materialTwinkle(), this._life <= 0 && this.setDestroyed();
}, u.prototype.setDestroyed = function () {
  var e = this;
  this._isActive && (this.setState(!1), this.setCollision(!1), s["default"].MapClr.modelManage.myModel.WCManage.eliminateItem(this), this.scheduleOnce(function () {
    r.prototype.setDestroyed.call(e);
  }, .1));
}, u.prototype.setConstructImg = function (o, e) {
  this.isUpdataIme && cc.resources.load(e, cc.SpriteFrame, function (e, t) {
    o.spriteFrame = t;
  });
}, u.prototype.moveTo = function (e) {
  this._mapPos.y <= 3 ? (this.setState(!1), this.setCollision(!1), s["default"].MapClr.modelManage.myModel.WCManage.deletePoint(this), r.prototype.deleteNode.call(this)) : r.prototype.moveTo.call(this, e);
}, u.prototype.setLife = function (e) {
  r.prototype.setLife.call(this, e);
}, a([t, e("gameElement/WC_FreshBox")], u));

function u() {
  var e = null !== r && r.apply(this, arguments) || this;
  return e.type = l.Element_Type.WC_FreshBox, e;
}

o["default"] = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,