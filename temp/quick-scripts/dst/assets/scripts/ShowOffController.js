
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ShowOffController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2263dGtdy1FeIQe2vSZzEHG', 'ShowOffController');
// scripts/ShowOffController.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    s = e("AppCommon"),
    c = cc._decorator,
    t = c.ccclass,
    e = c.property;
(c = r = r || {})[c.NOT = 0] = "NOT", c[c.Platform = 1] = "Platform", c[c.PlatformBan = 2] = "PlatformBan", c[c.Bms = 3] = "Bms", c[c.BmsBan = 4] = "BmsBan";
var l,
    t = (l = cc.Component, i(p, l), p.prototype.onLoad = function () {
  this.onNewState();
}, p.prototype.onNewState = function () {
  var e = this.Val.split(","),
      t = !1,
      o = !1;

  switch (this.ShowType) {
    case r.Platform:
      for (var n in e) {
        s["default"].PF == e[n] && (t = !0);
      }

      this.node.active = t;
      break;

    case r.PlatformBan:
      for (var n in e) {
        s["default"].PF == e[n] && (o = !0);
      }

      this.node.active = !o;
      break;

    case r.Bms:
      for (var n in e) {
        s["default"].CONFIG_INFO[e[n]] && (t = !0);
      }

      this.node.active = t;
  }
}, a([e({
  type: cc.Enum(r),
  displayName: "类型"
})], p.prototype, "ShowType", void 0), a([e({
  displayName: "控制值"
})], p.prototype, "Val", void 0), a([t], p));

function p() {
  var e = null !== l && l.apply(this, arguments) || this;
  return e.ShowType = r.NOT, e.Val = "", e;
}

o["default"] = t;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,