
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/pop_Matching.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6346bemS3JHqJ0CoayswfE/', 'pop_Matching');
// scripts/pop_Matching.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    l = e("AppCommon"),
    s = e("CCTool"),
    c = e("BaseSdk"),
    p = e("PlatformFun"),
    d = e("UserVo"),
    u = e("Cfg"),
    f = e("GameScene"),
    h = e("ModelManage"),
    m = e("pop"),
    t = cc._decorator,
    e = t.ccclass,
    e = (t.property, r = m["default"], i(y, r), y.prototype.start = function () {
  l["default"].PF == c.GAMEPF.ADR_XM && p.PlatformFun.showBannerAd();
}, y.prototype.initBoss = function () {
  this._bossInfo = this.getAiBoss();
  var o = this.nodeArr[0].parent.getChildByName("vs_tx"),
      e = u.Cfg.Ghost1.get(this._bossInfo.attributes);
  e && cc.resources.load("img/viewUi/role" + e.icon, cc.SpriteFrame, function (e, t) {
    o && (o.children[0].getComponent(cc.Sprite).spriteFrame = t);
  });
}, y.prototype.getAiList = function () {
  l["default"].data.RandomNameLen || (l["default"].data.RandomNameLen = Object.keys(u.Cfg.RandomName.getAll()).length);
  var e,
      t = u.Cfg.Man.getAll(),
      o = [];

  for (e in t) {
    0 <= t[e].model.indexOf(l["default"].GScene._GameModel) && o.push(t[e].id);
  }

  return o;
}, y.prototype.getAiBoss = function () {
  var t = [];
  return u.Cfg.Ghost.forEach(function (e) {
    0 <= e.model.indexOf(l["default"].GScene._GameModel) && t.push({
      v: e,
      w: e.born
    });
  }), l["default"].weightGetValue(t).v;
}, y.prototype.startMatching = function () {
  var s = this;
  this.labelArr[0].string = l["default"].strReplace(this.matchingData.title, 0);
  var c = 10;
  cc.resources.load("prefab/pop/MatchingItem", cc.Prefab, function (e, r) {
    for (var t = 0; t < s.matchingData.playerNum; t++) {
      !function (e) {
        var t = cc.instantiate(r);
        t.setParent(l["default"].GScene._GameModel === h.GAME_MODEL.BOSS_MODEL && 0 == e ? s.nodeArr[1] : s.nodeArr[0]);
        var o = l["default"].getRandomSDiff(1, l["default"].data.RandomNameLen, s.matchingData.playerNum),
            n = s.playerIndex == e,
            i = n ? s._skinId : l["default"].GetArrTarge(u.Cfg.RoleMan.keys),
            a = {
          index: e,
          skinID: n ? s._skinId : i,
          img: "role" + i,
          name: n ? "我" : u.Cfg.RandomName.get(o[e]).name,
          isPlayer: n,
          isReady: !1,
          aiData: n || 0 == c ? null : u.Cfg.Man.get(l["default"].data.SetAI || l["default"].GetArrTarge(s.matchingData.aiSetTingList))
        };
        s.list.push(a), s.itemList.push(t), a.isPlayer ? s.joinRoom(a) : (c--, cc.tween(t).delay(l["default"].GetRandomNum(0, 200, !1) / 100).delay(l["default"].GetRandomNum(1, 20) / 10).call(function () {
          s.joinRoom(a);
        }).delay(l["default"].GetRandomNum(1, 20) / 10).call(function () {
          a.isReady = !0, s.setReady(a);
        }).start());
      }(t);
    }
  });
}, y.prototype.joinRoom = function (e) {
  var o = this.itemList[e.index];
  o.children[0].getComponent(cc.Label).string = e.name, cc.resources.load("img/viewUi/" + e.img, cc.SpriteFrame, function (e, t) {
    o.children[1].getComponent(cc.Sprite).spriteFrame = t, o.children[1].active = !0;
  }), e.isPlayer && (l["default"].GScene._GameModel === h.GAME_MODEL.BOSS_MODEL && (o.width = 129, o.height = 120), cc.resources.load("img/viewUi/hyzb_tx _zj", cc.SpriteFrame, function (e, t) {
    o.getComponent(cc.Sprite).spriteFrame = t;
  }));
}, y.prototype.setReady = function (e) {
  this.itemList[e.index].children[2].active = !0, this.checkReady();
}, y.prototype.checkReady = function () {
  for (var e = this, t = 0, o = 0; o < this.list.length; o++) {
    this.list[o].isReady && (t += 1);
  }

  for (var n = 0, o = 0; o < this.list.length; o++) {
    this.list[o].isReady && (this.list[o].isPlayer && l["default"].GScene._GameModel === h.GAME_MODEL.BOSS_MODEL || n++);
  }

  this.labelArr[0].string = l["default"].strReplace(this.matchingData.title, n), t == this.list.length && (this.isReady || (this.isReady = !0, l["default"].MapClr.MatchRoleData = this.list, l["default"].GScene.startGame(), cc.tween(this.node).to(.5, {
    opacity: 0
  }).call(function () {
    e.close();
  }).start()));
}, y.prototype.onButton = function (e, t) {
  switch (e && s.CCTool.Audio.Player("Click"), t) {
    case "Close":
      l["default"].GScene.setGameStart(f.GAME_STATE.Index), this.close();
      break;

    case "Join":
      e.target.active = !1, this.list[this.playerIndex].isReady = !0, this.setReady(this.list[this.playerIndex]), p.PlatformFun.SendEvent(l["default"].GScene.getModeStr() + "level_start");
  }
}, a([e], y));

function y() {
  var n = null !== r && r.apply(this, arguments) || this;
  return n.isReady = !1, n.list = [], n.itemList = [], n._skinId = 0, n._bossInfo = null, n.initFun = {
    pop_Matching: function pop_Matching() {
      n.matchingData = {
        title: "会议准备中（%d/6）",
        playerNum: 6,
        aiSetTingList: n.getAiList()
      }, n.playerIndex = l["default"].GetRandomNum(0, 5), n.initBoss(), n.startMatching(), n._skinId = d.UserVo.useSkin, l["default"].MapClr.AiBossData = n._bossInfo;
    },
    pop_Matching_M2: function pop_Matching_M2() {
      n.matchingData = {
        title: "加班申请（%d/2）",
        playerNum: 2,
        aiSetTingList: n.getAiList()
      };

      for (var e = n.playerIndex = 0; e < n.matchingData.playerNum; e++) {
        var t = n.playerIndex == e,
            o = t ? d.UserVo.useSkin : l["default"].GetArrTarge(u.Cfg.RoleMan.keys),
            t = {
          index: e,
          skinID: o,
          img: "role" + o,
          name: t ? "我" : u.Cfg.RandomName.get(l["default"].GetRandomNum(1, l["default"].data.RandomNameLen)).name,
          isPlayer: t,
          isReady: !1,
          aiData: t ? null : u.Cfg.Man.get(l["default"].data.SetAI || l["default"].GetArrTarge(n.matchingData.aiSetTingList))
        };
        n.list.push(t);
      }

      l["default"].MapClr.MatchRoleData = n.list, s.CCTool.UI.OpenPop("prefab/pop/pop_MatcAM_1v1", {
        call: function call() {
          l["default"].GScene.startGame(), cc.tween(l["default"].MainView.IndexPage).delay(.5).to(.5, {
            opacity: 0
          }).start();
        }
      }, l["default"].MainView.PopBox), n.close();
    },
    pop_Matching_M3: function pop_Matching_M3() {
      n.matchingData = {
        title: "会议准备中（%d/6）",
        playerNum: 7,
        aiSetTingList: n.getAiList()
      }, n.playerIndex = 0, n._skinId = d.UserVo.useBossSkin, n.startMatching();
    }
  }, n;
}

o["default"] = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,