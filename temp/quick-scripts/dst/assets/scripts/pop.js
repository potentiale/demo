
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/pop.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '863cdRbLCxEDKUofSmqgMAb', 'pop');
// scripts/pop.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    s = e("AppCommon"),
    c = e("CCTool"),
    l = e("PlatformFun"),
    p = e("TTGame"),
    d = e("UserVo"),
    u = e("SwitchBtn"),
    f = e("GameScene"),
    h = cc._decorator,
    t = h.ccclass,
    e = h.menu,
    h = h.property,
    e = (r = cc.Component, i(m, r), m.prototype.onLoad = function () {
  l.PlatformFun.hideBannerAd(), this.node.setContentSize(cc.winSize), this.node.setPosition(0, 0), this.initFun[this.node.name] ? this.initFun[this.node.name]() : this.initFun["default"] && this.initFun["default"](), l.PlatformFun.hideNativeAd();
}, m.prototype.onDestroy = function () {}, m.prototype.onButton = function (e, t) {
  var o = this;

  switch (cc.log(t), e && c.CCTool.Audio.Player("Click"), t) {
    case "pop_SYSPrivacyAgreement_1":
    case "pop_SYSPrivacyAgreement_2":
    case "pop_GamePause":
      c.CCTool.UI.OpenPop("prefab/pop/" + t);
      break;

    case "Close":
    case "close":
      this.close();
      break;

    case "GetIndex":
      s["default"].GScene.setGameStart(f.GAME_STATE.Index), l.PlatformFun.SendEvent(s["default"].GScene.getModeStr() + "exit"), this.close();
      break;

    case "Report":
      l.PlatformFun.SendEvent(s["default"].GScene.getModeStr() + "report_click"), l.PlatformFun.loadRewardedVideoAd({
        onVideoSuccess: function onVideoSuccess() {
          var e = s["default"].MapClr.monsterList[0];
          e && e.myFSM.attackRoleById(o.pdata), o.close();
        },
        loadSuccess: function loadSuccess() {
          l.PlatformFun.SendEvent(s["default"].GScene.getModeStr() + "report_show");
        }
      });
      break;

    case "Get":
      c.CCTool.UI.ShowToast("获得摸鱼币" + s["default"].data.getCoin), d.UserVo.SetFish(s["default"].data.getCoin), s["default"].GScene.setGameStart(f.GAME_STATE.Index), this.close();
      break;

    case "VideoGet":
      var n = s["default"].data.getCoin,
          i = this;
      l.PlatformFun.loadRewardedVideoAd({
        onVideoSuccess: function onVideoSuccess() {
          c.CCTool.UI.ShowToast("获得摸鱼币" + 3 * n), d.UserVo.SetFish(3 * n), s["default"].GScene.setGameStart(f.GAME_STATE.Index), i.close();
        },
        loadSuccess: function loadSuccess() {
          l.PlatformFun.SendEvent(s["default"].GScene.getModeStr() + "show_vedio_reward");
        }
      }), l.PlatformFun.SendEvent(s["default"].GScene.getModeStr() + "click_vedio_reward");
      break;

    case "TTShare":
      p["default"].ShareVideoUrl({
        onShareSuccess: function onShareSuccess() {
          e.target.active = !1;
        }
      });
      break;

    case "WXShare":
      l.PlatformFun.shareAppMessage();
      break;

    default:
      s["default"].MainView.onButton(null, t), "FreeCreationGame" == t && this.close();
  }
}, m.prototype.close = function () {
  this.isClose || (this.closeFun[this.node.name] && this.closeFun[this.node.name](), l.PlatformFun.hideBannerAd(), this.isClose = !0, this.onCloseCallBack(), this.node.destroy(), this.node.removeFromParent(!1));
}, a([h([cc.Node])], m.prototype, "nodeArr", void 0), a([h([cc.Label])], m.prototype, "labelArr", void 0), a([h(u["default"])], m.prototype, "switchBtn", void 0), a([t, e("pop/pop")], m));

function m() {
  var e = null !== r && r.apply(this, arguments) || this;
  return e.nodeArr = [], e.labelArr = [], e.switchBtn = null, e.pdata = {}, e.initFun = {
    pop_SYSPrivacyAgreement_Select: function pop_SYSPrivacyAgreement_Select() {},
    pop_GameGuide_M4: function pop_GameGuide_M4() {
      e.switchBtn.node.active = !d.UserVo.data.m4_gameGuide;
    }
  }, e.closeFun = {
    pop_GameGuide_M4: function pop_GameGuide_M4() {
      d.UserVo.data.m4_gameGuide || s["default"].NoviceTips || c.CCTool.UI.OpenPop("prefab/pop/pop_NoviceTips", {}, s["default"].MainView.GamePage, function (e) {
        e.setMskePos({
          id: 1
        });
      }), e.switchBtn.getState() && (d.UserVo.data.m4_gameGuide = 1, d.UserVo.SaveData());
    }
  }, e.isClose = !1, e.onCloseCallBack = function () {}, e;
}

o["default"] = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,