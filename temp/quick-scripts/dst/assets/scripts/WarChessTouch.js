
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/WarChessTouch.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b5724FB6xxHLbJH6agx0bo5', 'WarChessTouch');
// scripts/WarChessTouch.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    s,
    c = e("AppCommon"),
    l = e("CCTool"),
    p = e("ListenID"),
    d = e("Notifier"),
    u = e("Cfg"),
    f = e("WarChessManage"),
    t = cc._decorator,
    e = t.ccclass,
    e = (t.property, s = cc.Component, i(h, s), h.prototype.onLoad = function () {
  r = c["default"].MapClr.modelManage.myModel.WCManage;
}, h.prototype.onEnable = function () {
  this.node.on(cc.Node.EventType.TOUCH_START, this.TOUCH_START, this), this.node.on(cc.Node.EventType.TOUCH_MOVE, this.TOUCH_MOVE, this), this.node.on(cc.Node.EventType.TOUCH_END, this.TOUCH_END, this), this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.TOUCH_END, this);
}, h.prototype.onDisable = function () {
  this.node.off(cc.Node.EventType.TOUCH_START, this.TOUCH_START, this), this.node.off(cc.Node.EventType.TOUCH_MOVE, this.TOUCH_MOVE, this), this.node.off(cc.Node.EventType.TOUCH_END, this.TOUCH_END, this), this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.TOUCH_END, this);
}, h.prototype.TOUCH_START = function () {
  this.isMove = !c["default"].GScene.isPause && r.roundType == f.ROUND_TYPE.USER && 0 == r.touchNum, cc.tween(this.node).to(.1, {
    scale: .9
  }).start(), this.isMove && r.touchNum++;
}, h.prototype.TOUCH_MOVE = function (e) {
  this.isMove && (this.node.setPosition(l.CCTool.System.GetV2(e)), this.node.zIndex = 20, this.checkLattice(this.node.position));
}, h.prototype.TOUCH_END = function (e) {
  cc.tween(this.node).to(.1, {
    scale: 1
  }).start(), this.isMove && (this.exitLattice(), e = c["default"].MapClr.getMapPos(l.CCTool.System.GetV2(e)), this.ower.getZIndex(), r.itemMoveTo(this.ower, e), r.touchNum = 0, d.Notifier.send(p.ListenID.WC_TouchEnd));
}, h.prototype.checkLattice = function (e) {
  e = c["default"].MapClr.getMapPos(e);
  this.oldLattice ? this.oldLattice.x == e.x && this.oldLattice.y == e.y || (this.exitLattice(), this.inLattice(e)) : this.inLattice(e);
}, h.prototype.inLattice = function (e) {
  this.oldLattice = e;
  var t = r.getNodeTag(e);
  t && t.uuid != this.ower.uuid ? (this.underTag = t, this.underTag.node.active = !1, t = this.checkTouchData(t), this.newPreview({
    path: t.parameter[1],
    pos: e
  })) : this.newPreview({
    path: this.ower.attribute.data.parameter[1],
    pos: e
  });
}, h.prototype.exitLattice = function () {
  this.underTag && (this.underTag.node.active = !0), r.myPreview_1 && (r.myPreview_1.node.active = !1), this.oldLattice = null, this.underTag = null;
}, h.prototype.newPreview = function (e) {
  r.checkCanMove(e.pos) || (r.myPreview_1.node.setPosition(c["default"].MapClr.getV2Pos(e.pos)), r.myPreview_1_path != e.path ? (cc.resources.load("img/model_4/" + e.path, cc.SpriteFrame, function (e, t) {
    r.myPreview_1.spriteFrame = t, r.myPreview_1.node.active = !0;
  }), r.myPreview_1.node.opacity = 100, r.myPreview_1_path = e.path) : r.myPreview_1.node.active = !0);
}, h.prototype.checkTouchData = function (e) {
  var t,
      o = this.ower.attribute.data;
  return this.ower.attribute.isMax ? o : ("string" == typeof (t = (t = o.level == e.attribute.lv ? u.Cfg.Building999.get(o.id + 1) : t) || o).parameter && (t.parameter = JSON.parse(t.parameter)), t);
}, a([e], h));

function h() {
  var e = null !== s && s.apply(this, arguments) || this;
  return e.isMove = !1, e.oldLattice = null, e;
}

o["default"] = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,