
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/AmTool.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b1ff6qhWLNEpbCHkSN2l4Xd', 'AmTool');
// scripts/AmTool.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i,
    a = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    r = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
}), (l = i = i || {})[l.NOT = 0] = "NOT", l[l.FadeIn = 1] = "FadeIn", l[l.ScaleIn = 2] = "ScaleIn", l[l.Float = 3] = "Float", l[l.Breathing = 4] = "Breathing", l[l.FadeBreathing = 5] = "FadeBreathing", l[l.Rotate = 6] = "Rotate", l[l.BigIn = 7] = "BigIn", l[l.FadeOut = 8] = "FadeOut";
var s,
    c = cc._decorator,
    t = c.ccclass,
    l = c.menu,
    c = c.property,
    l = (s = cc.Component, a(p, s), p.prototype.onLoad = function () {
  switch (this.AmType) {
    case i.Float:
      cc.tween(this.node).sequence(cc.tween().by(this.amTime, {
        position: cc.v2(+this.toValue[0] || 0, +this.toValue[1] || 50)
      }, {
        easing: "sineInOut"
      }), cc.tween().by(this.amTime, {
        position: cc.v2(-+this.toValue[0] || 0, -this.toValue[1] || -50)
      }, {
        easing: "sineInOut"
      })).repeatForever().start();
      break;

    case i.Breathing:
      cc.tween(this.node).sequence(cc.tween().to(this.amTime, {
        scale: +this.toValue[0] || 1
      }, {
        easing: "sineInOut"
      }), cc.tween().to(this.amTime, {
        scale: +this.toValue[1] || 1.1
      }, {
        easing: "sineInOut"
      })).repeatForever().start();
      break;

    case i.FadeBreathing:
      cc.tween(this.node).sequence(cc.tween().to(this.amTime, {
        opacity: 0
      }, {
        easing: "sineInOut"
      }), cc.tween().to(this.amTime, {
        opacity: 255
      }, {
        easing: "sineInOut"
      })).repeatForever().start();
      break;

    case i.Rotate:
      cc.tween(this.node).by(this.amTime, {
        angle: -30
      }).repeatForever().start();
  }
}, p.prototype.onEnable = function () {
  switch (this.AmType) {
    case i.FadeIn:
      this.node.opacity = 0, cc.tween(this.node).delay(this.delayTime).to(this.amTime, {
        opacity: +this.toValue[0] || 255
      }).start();
      break;

    case i.FadeOut:
      this.node.opacity = 255, cc.tween(this.node).delay(this.delayTime).to(this.amTime, {
        opacity: +this.toValue[0] || 0
      }).start();
      break;

    case i.ScaleIn:
      this.node.scale = 0, cc.tween(this.node).delay(this.delayTime).to(this.amTime / 2, {
        scale: +this.toValue[0] || 1.2
      }).to(this.amTime / 3, {
        scale: +this.toValue[1] || 1
      }).start();
      break;

    case i.BigIn:
      this.node.scale = 4, this.node.opacity = 0, cc.tween(this.node).delay(this.delayTime).parallel(cc.tween().to(.2, {
        opacity: 255
      }), cc.tween().to(.3, {
        scale: 1
      })).start();
  }
}, r([c({
  type: cc.Enum(i),
  displayName: "动画类型"
})], p.prototype, "AmType", void 0), r([c({
  type: [cc.Float],
  displayName: "到达指定值"
})], p.prototype, "toValue", void 0), r([c({
  type: cc.Float,
  displayName: "动画时间"
})], p.prototype, "amTime", void 0), r([c({
  type: cc.Float,
  displayName: "等待时间"
})], p.prototype, "delayTime", void 0), r([t, l("UI/AmTool")], p));

function p() {
  var e = null !== s && s.apply(this, arguments) || this;
  return e.AmType = i.NOT, e.toValue = [], e.amTime = .3, e.delayTime = 0, e;
}

o["default"] = l;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcQW1Ub29sLmpzIl0sIm5hbWVzIjpbImUiLCJyZXF1aXJlIiwidCIsIm1vZHVsZSIsIm8iLCJleHBvcnRzIiwibiIsImkiLCJhIiwiX19leHRlbmRzIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJBcnJheSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImNvbnN0cnVjdG9yIiwiY3JlYXRlIiwiciIsIl9fZGVjb3JhdGUiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJSZWZsZWN0IiwiZGVjb3JhdGUiLCJzIiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImwiLCJOT1QiLCJGYWRlSW4iLCJTY2FsZUluIiwiRmxvYXQiLCJCcmVhdGhpbmciLCJGYWRlQnJlYXRoaW5nIiwiUm90YXRlIiwiQmlnSW4iLCJGYWRlT3V0IiwiYyIsImNjIiwiX2RlY29yYXRvciIsImNjY2xhc3MiLCJtZW51IiwicHJvcGVydHkiLCJDb21wb25lbnQiLCJwIiwib25Mb2FkIiwiQW1UeXBlIiwidHdlZW4iLCJub2RlIiwic2VxdWVuY2UiLCJieSIsImFtVGltZSIsInBvc2l0aW9uIiwidjIiLCJ0b1ZhbHVlIiwiZWFzaW5nIiwicmVwZWF0Rm9yZXZlciIsInN0YXJ0IiwidG8iLCJzY2FsZSIsIm9wYWNpdHkiLCJhbmdsZSIsIm9uRW5hYmxlIiwiZGVsYXkiLCJkZWxheVRpbWUiLCJwYXJhbGxlbCIsInR5cGUiLCJFbnVtIiwiZGlzcGxheU5hbWUiLCJhcHBseSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxDQUFDLEdBQUNDLE9BQU47QUFDQSxJQUFJQyxDQUFDLEdBQUNDLE1BQU47QUFDQSxJQUFJQyxDQUFDLEdBQUNDLE9BQU47QUFDQTs7QUFBYSxJQUFJQyxFQUFKO0FBQUEsSUFBTUMsQ0FBTjtBQUFBLElBQVFDLENBQUMsR0FB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LEtBQVQ7QUFBZXFDLEVBQUFBLFdBQVcsRUFBQztBQUEzQixDQUFELENBQUYsQ0FBRCxFQUF5Q3hCLENBQUMsQ0FBQ2hDLFNBQTNDLEVBQXFELFFBQXJELEVBQThELEtBQUssQ0FBbkUsQ0FBcnJELEVBQTJ2REssQ0FBQyxDQUFDLENBQUNvQixDQUFDLENBQUM7QUFBQzZCLEVBQUFBLElBQUksRUFBQzVCLEVBQUUsQ0FBQ1AsS0FBVDtBQUFlcUMsRUFBQUEsV0FBVyxFQUFDO0FBQTNCLENBQUQsQ0FBRixDQUFELEVBQXlDeEIsQ0FBQyxDQUFDaEMsU0FBM0MsRUFBcUQsV0FBckQsRUFBaUUsS0FBSyxDQUF0RSxDQUE1dkQsRUFBcTBESyxDQUFDLENBQUMsQ0FBQ2pCLENBQUQsRUFBRzJCLENBQUMsQ0FBQyxXQUFELENBQUosQ0FBRCxFQUFvQmlCLENBQXBCLENBQXgwRCxDQUF6RDs7QUFBeTVELFNBQVNBLENBQVQsR0FBWTtBQUFDLE1BQUk5QyxDQUFDLEdBQUMsU0FBTzBCLENBQVAsSUFBVUEsQ0FBQyxDQUFDNkMsS0FBRixDQUFRLElBQVIsRUFBYWxELFNBQWIsQ0FBVixJQUFtQyxJQUF6QztBQUE4QyxTQUFPckIsQ0FBQyxDQUFDZ0QsTUFBRixHQUFTekMsQ0FBQyxDQUFDdUIsR0FBWCxFQUFlOUIsQ0FBQyxDQUFDd0QsT0FBRixHQUFVLEVBQXpCLEVBQTRCeEQsQ0FBQyxDQUFDcUQsTUFBRixHQUFTLEVBQXJDLEVBQXdDckQsQ0FBQyxDQUFDa0UsU0FBRixHQUFZLENBQXBELEVBQXNEbEUsQ0FBN0Q7QUFBK0Q7O0FBQUFJLENBQUMsV0FBRCxHQUFVeUIsQ0FBViIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGU9cmVxdWlyZTtcbnZhciB0PW1vZHVsZTtcbnZhciBvPWV4cG9ydHM7XG5cInVzZSBzdHJpY3RcIjt2YXIgbixpLGE9dGhpcyYmdGhpcy5fX2V4dGVuZHN8fChuPWZ1bmN0aW9uKGUsdCl7cmV0dXJuKG49T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKGUsdCl7ZS5fX3Byb3RvX189dH18fGZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBvIGluIHQpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsbykmJihlW29dPXRbb10pfSkoZSx0KX0sZnVuY3Rpb24oZSx0KXtmdW5jdGlvbiBvKCl7dGhpcy5jb25zdHJ1Y3Rvcj1lfW4oZSx0KSxlLnByb3RvdHlwZT1udWxsPT09dD9PYmplY3QuY3JlYXRlKHQpOihvLnByb3RvdHlwZT10LnByb3RvdHlwZSxuZXcgbyl9KSxyPXRoaXMmJnRoaXMuX19kZWNvcmF0ZXx8ZnVuY3Rpb24oZSx0LG8sbil7dmFyIGksYT1hcmd1bWVudHMubGVuZ3RoLHI9YTwzP3Q6bnVsbD09PW4/bj1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsbyk6bjtpZihcIm9iamVjdFwiPT10eXBlb2YgUmVmbGVjdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSlyPVJlZmxlY3QuZGVjb3JhdGUoZSx0LG8sbik7ZWxzZSBmb3IodmFyIHM9ZS5sZW5ndGgtMTswPD1zO3MtLSkoaT1lW3NdKSYmKHI9KGE8Mz9pKHIpOjM8YT9pKHQsbyxyKTppKHQsbykpfHxyKTtyZXR1cm4gMzxhJiZyJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLHIpLHJ9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShvLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLChsPWk9aXx8e30pW2wuTk9UPTBdPVwiTk9UXCIsbFtsLkZhZGVJbj0xXT1cIkZhZGVJblwiLGxbbC5TY2FsZUluPTJdPVwiU2NhbGVJblwiLGxbbC5GbG9hdD0zXT1cIkZsb2F0XCIsbFtsLkJyZWF0aGluZz00XT1cIkJyZWF0aGluZ1wiLGxbbC5GYWRlQnJlYXRoaW5nPTVdPVwiRmFkZUJyZWF0aGluZ1wiLGxbbC5Sb3RhdGU9Nl09XCJSb3RhdGVcIixsW2wuQmlnSW49N109XCJCaWdJblwiLGxbbC5GYWRlT3V0PThdPVwiRmFkZU91dFwiO3ZhciBzLGM9Y2MuX2RlY29yYXRvcix0PWMuY2NjbGFzcyxsPWMubWVudSxjPWMucHJvcGVydHksbD0ocz1jYy5Db21wb25lbnQsYShwLHMpLHAucHJvdG90eXBlLm9uTG9hZD1mdW5jdGlvbigpe3N3aXRjaCh0aGlzLkFtVHlwZSl7Y2FzZSBpLkZsb2F0OmNjLnR3ZWVuKHRoaXMubm9kZSkuc2VxdWVuY2UoY2MudHdlZW4oKS5ieSh0aGlzLmFtVGltZSx7cG9zaXRpb246Y2MudjIoK3RoaXMudG9WYWx1ZVswXXx8MCwrdGhpcy50b1ZhbHVlWzFdfHw1MCl9LHtlYXNpbmc6XCJzaW5lSW5PdXRcIn0pLGNjLnR3ZWVuKCkuYnkodGhpcy5hbVRpbWUse3Bvc2l0aW9uOmNjLnYyKC0rdGhpcy50b1ZhbHVlWzBdfHwwLC10aGlzLnRvVmFsdWVbMV18fC01MCl9LHtlYXNpbmc6XCJzaW5lSW5PdXRcIn0pKS5yZXBlYXRGb3JldmVyKCkuc3RhcnQoKTticmVhaztjYXNlIGkuQnJlYXRoaW5nOmNjLnR3ZWVuKHRoaXMubm9kZSkuc2VxdWVuY2UoY2MudHdlZW4oKS50byh0aGlzLmFtVGltZSx7c2NhbGU6K3RoaXMudG9WYWx1ZVswXXx8MX0se2Vhc2luZzpcInNpbmVJbk91dFwifSksY2MudHdlZW4oKS50byh0aGlzLmFtVGltZSx7c2NhbGU6K3RoaXMudG9WYWx1ZVsxXXx8MS4xfSx7ZWFzaW5nOlwic2luZUluT3V0XCJ9KSkucmVwZWF0Rm9yZXZlcigpLnN0YXJ0KCk7YnJlYWs7Y2FzZSBpLkZhZGVCcmVhdGhpbmc6Y2MudHdlZW4odGhpcy5ub2RlKS5zZXF1ZW5jZShjYy50d2VlbigpLnRvKHRoaXMuYW1UaW1lLHtvcGFjaXR5OjB9LHtlYXNpbmc6XCJzaW5lSW5PdXRcIn0pLGNjLnR3ZWVuKCkudG8odGhpcy5hbVRpbWUse29wYWNpdHk6MjU1fSx7ZWFzaW5nOlwic2luZUluT3V0XCJ9KSkucmVwZWF0Rm9yZXZlcigpLnN0YXJ0KCk7YnJlYWs7Y2FzZSBpLlJvdGF0ZTpjYy50d2Vlbih0aGlzLm5vZGUpLmJ5KHRoaXMuYW1UaW1lLHthbmdsZTotMzB9KS5yZXBlYXRGb3JldmVyKCkuc3RhcnQoKX19LHAucHJvdG90eXBlLm9uRW5hYmxlPWZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMuQW1UeXBlKXtjYXNlIGkuRmFkZUluOnRoaXMubm9kZS5vcGFjaXR5PTAsY2MudHdlZW4odGhpcy5ub2RlKS5kZWxheSh0aGlzLmRlbGF5VGltZSkudG8odGhpcy5hbVRpbWUse29wYWNpdHk6K3RoaXMudG9WYWx1ZVswXXx8MjU1fSkuc3RhcnQoKTticmVhaztjYXNlIGkuRmFkZU91dDp0aGlzLm5vZGUub3BhY2l0eT0yNTUsY2MudHdlZW4odGhpcy5ub2RlKS5kZWxheSh0aGlzLmRlbGF5VGltZSkudG8odGhpcy5hbVRpbWUse29wYWNpdHk6K3RoaXMudG9WYWx1ZVswXXx8MH0pLnN0YXJ0KCk7YnJlYWs7Y2FzZSBpLlNjYWxlSW46dGhpcy5ub2RlLnNjYWxlPTAsY2MudHdlZW4odGhpcy5ub2RlKS5kZWxheSh0aGlzLmRlbGF5VGltZSkudG8odGhpcy5hbVRpbWUvMix7c2NhbGU6K3RoaXMudG9WYWx1ZVswXXx8MS4yfSkudG8odGhpcy5hbVRpbWUvMyx7c2NhbGU6K3RoaXMudG9WYWx1ZVsxXXx8MX0pLnN0YXJ0KCk7YnJlYWs7Y2FzZSBpLkJpZ0luOnRoaXMubm9kZS5zY2FsZT00LHRoaXMubm9kZS5vcGFjaXR5PTAsY2MudHdlZW4odGhpcy5ub2RlKS5kZWxheSh0aGlzLmRlbGF5VGltZSkucGFyYWxsZWwoY2MudHdlZW4oKS50byguMix7b3BhY2l0eToyNTV9KSxjYy50d2VlbigpLnRvKC4zLHtzY2FsZToxfSkpLnN0YXJ0KCl9fSxyKFtjKHt0eXBlOmNjLkVudW0oaSksZGlzcGxheU5hbWU6XCLliqjnlLvnsbvlnotcIn0pXSxwLnByb3RvdHlwZSxcIkFtVHlwZVwiLHZvaWQgMCkscihbYyh7dHlwZTpbY2MuRmxvYXRdLGRpc3BsYXlOYW1lOlwi5Yiw6L6+5oyH5a6a5YC8XCJ9KV0scC5wcm90b3R5cGUsXCJ0b1ZhbHVlXCIsdm9pZCAwKSxyKFtjKHt0eXBlOmNjLkZsb2F0LGRpc3BsYXlOYW1lOlwi5Yqo55S75pe26Ze0XCJ9KV0scC5wcm90b3R5cGUsXCJhbVRpbWVcIix2b2lkIDApLHIoW2Moe3R5cGU6Y2MuRmxvYXQsZGlzcGxheU5hbWU6XCLnrYnlvoXml7bpl7RcIn0pXSxwLnByb3RvdHlwZSxcImRlbGF5VGltZVwiLHZvaWQgMCkscihbdCxsKFwiVUkvQW1Ub29sXCIpXSxwKSk7ZnVuY3Rpb24gcCgpe3ZhciBlPW51bGwhPT1zJiZzLmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8dGhpcztyZXR1cm4gZS5BbVR5cGU9aS5OT1QsZS50b1ZhbHVlPVtdLGUuYW1UaW1lPS4zLGUuZGVsYXlUaW1lPTAsZX1vLmRlZmF1bHQ9bCJdfQ==