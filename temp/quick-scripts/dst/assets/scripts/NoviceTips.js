
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/NoviceTips.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5a43c60DqZJOaFvr6nZeQsb', 'NoviceTips');
// scripts/NoviceTips.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    s = e("AppCommon"),
    c = e("CCTool"),
    l = e("PlatformFun"),
    p = e("ListenID"),
    d = e("Notifier"),
    u = e("ElementBase"),
    f = e("WarChessManage"),
    h = e("pop"),
    t = cc._decorator,
    e = t.ccclass,
    t = t.property,
    e = (r = h["default"], i(m, r), m.prototype.onLoad = function () {
  l.PlatformFun.hideBannerAd(), l.PlatformFun.hideNativeAd(), this.node.setContentSize(cc.winSize), this.node.setPosition(0, 0), this.initFun[this.node.name] && this.initFun[this.node.name](), this.node.children[0].opacity = 0, this.nodeArr[0].scale = 0, this.fingerImg = this.nodeArr[0].getComponent(cc.Sprite);
}, m.prototype.start = function () {}, m.prototype.onEnable = function () {
  d.Notifier.changeListener(!0, p.ListenID.WC_TouchEnd, this.on_WC_TouchEnd, this);
}, m.prototype.onDisable = function () {
  d.Notifier.changeListener(!1, p.ListenID.WC_TouchEnd, this.on_WC_TouchEnd, this), s["default"].NoviceTips = null;
}, m.prototype.on_WC_TouchEnd = function () {
  this.hide(), 2 == this.pdata.id && this.close();
}, m.prototype.setMskePos = function (e) {
  this.pdata = e, this.show(), cc.Tween.stopAllByTarget(this.nodeArr[0]), this.guideType[e.id](), this.node.children[0].active = e.hasMask, cc.tween(this.node.children[0]).to(.1, {
    opacity: e.hasMask ? 200 : 0
  }).start();
}, m.prototype.setMskeNode = function (e, t, o) {
  void 0 === t && (t = ""), void 0 === o && (o = 0), this.show(), cc.Tween.stopAllByTarget(this.nodeArr[0]);
  var n = e.convertToWorldSpaceAR(cc.v2(-cc.winSize.width / 2, -cc.winSize.height / 2)),
      e = e.getContentSize();
  this.setPointMskeState(n, e, t, o);
}, m.prototype.setPointMskeState = function (e, t, o, n) {
  var i = this;
  void 0 === o && (o = ""), void 0 === n && (n = 0), o = c.CCTool.Language.check(o), this.nodeArr[1].opacity = 0, this.scheduleOnce(function () {
    cc.tween(i.nodeArr[1]).parallel(cc.tween().to(.2, {
      opacity: 255
    }), cc.tween().to(.3, {
      position: e
    }), cc.tween().to(.4, {
      width: t.width + 20,
      height: t.height + 20
    })).to(.1, {
      scale: 1.2
    }).to(.2, {
      scale: .9
    }).to(.2, {
      scale: 1
    }).start(), i.nodeArr[0].active = !0, cc.tween(i.nodeArr[0]).to(.4, {
      x: e.x + .4 * t.width,
      y: e.y - .4 * t.height
    }).start(), i.labelArr[0].string = o, i.nodeArr[2].active = !!o, cc.tween(i.nodeArr[2]).to(.2, {
      y: e.y + .2 * t.height + 200,
      scale: 1
    }).start();
  }, n);
}, m.prototype.hide = function () {
  cc.Tween.stopAllByTarget(this.nodeArr[0]), cc.tween(this.nodeArr[1]).to(.1, {
    opacity: 0
  }).start(), cc.tween(this.nodeArr[2]).to(.2, {
    scale: 0
  }).start(), this.myTween && this.myTween.stop(), this.nodeArr[1].setContentSize(0, 0), this.nodeArr[1].opacity = 0, this.nodeArr[0].active = !1;
}, m.prototype.show = function () {
  this.nodeArr[0].active = !0;
}, m.prototype.update = function () {
  this.updateFun[this.node.name] && this.updateFun[this.node.name]();
}, m.prototype.moveTo = function (e, t) {
  var o = this;
  this.nodeArr[0].setPosition(e), cc.tween(this.nodeArr[0]).to(.2, {
    scale: 1
  }).start(), this.myTween = cc.tween(this.nodeArr[0]).sequence(cc.tween().to(1, {
    position: t
  }, {
    easing: "sineInOut"
  }), cc.tween().call(function () {
    o.fingerImg.spriteFrame = o.SpList[1];
  }), cc.tween().delay(.5), cc.tween().to(1, {
    position: e
  }, {
    easing: "sineInOut"
  }), cc.tween().call(function () {
    o.fingerImg.spriteFrame = o.SpList[0];
  })).repeatForever().start();
}, a([t(cc.SpriteFrame)], m.prototype, "SpList", void 0), a([e], m));

function m() {
  var n = null !== r && r.apply(this, arguments) || this;
  return n.SpList = [], n.initFun = {
    pop_NoviceTips: function pop_NoviceTips() {
      s["default"].NoviceTips = n;
    }
  }, n.updateFun = {}, n.closeFun = {
    pop_NoviceTips: function pop_NoviceTips() {}
  }, n.guideType = {
    1: function _() {
      var e = s["default"].MapClr.getV2Pos({
        x: 2.5,
        y: 0
      }),
          t = s["default"].MapClr.modelManage.myModel.WCManage.getTag(u.Element_Type.WC_Monster).arr[0],
          t = s["default"].MapClr.getV2Pos({
        x: t._mapPos.x + .5,
        y: 1
      });
      n.moveTo(e, t);
    },
    2: function _() {
      var e = s["default"].MapClr.modelManage.myModel.WCManage,
          t = e.getTag(u.Element_Type.WC_Battery, f.POINT_TYPE.BATTLEFIELD).arr[0],
          o = s["default"].MapClr.getV2Pos({
        x: t._mapPos.x + .5,
        y: t._mapPos.y
      }),
          e = e.getTag(u.Element_Type.WC_FreshBox).arr[0];
      e ? (t = s["default"].MapClr.getV2Pos({
        x: e._mapPos.x + .5,
        y: t._mapPos.y
      }), n.moveTo(o, t)) : n.close();
    }
  }, n;
}

o["default"] = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,