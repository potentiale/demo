
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/ToastCurrencyItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b81faZ1VIZHPrDHaYzl1us0', 'ToastCurrencyItem');
// scripts/ToastCurrencyItem.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    s = cc._decorator,
    t = s.ccclass,
    s = s.property,
    t = (r = cc.Component, i(c, r), c.prototype.setText = function (e, t) {
  var o = "+";
  this.currency.spriteFrame = "fish" == e ? this.spriteframes[1] : "Fish coin" == e ? this.spriteframes[0] : this.spriteframes[2], this.label.string = (o = t < 0 ? "-" : o) + Math.abs(t);
}, a([s(cc.Label)], c.prototype, "label", void 0), a([s([cc.SpriteFrame])], c.prototype, "spriteframes", void 0), a([s(cc.Sprite)], c.prototype, "currency", void 0), a([t], c));

function c() {
  var e = null !== r && r.apply(this, arguments) || this;
  return e.label = null, e.spriteframes = [], e.currency = null, e;
}

o["default"] = t;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcVG9hc3RDdXJyZW5jeUl0ZW0uanMiXSwibmFtZXMiOlsiZSIsInJlcXVpcmUiLCJ0IiwibW9kdWxlIiwibyIsImV4cG9ydHMiLCJuIiwiaSIsIl9fZXh0ZW5kcyIsIk9iamVjdCIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJjb25zdHJ1Y3RvciIsImNyZWF0ZSIsImEiLCJfX2RlY29yYXRlIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlJlZmxlY3QiLCJkZWNvcmF0ZSIsInMiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiY2MiLCJfZGVjb3JhdG9yIiwiY2NjbGFzcyIsInByb3BlcnR5IiwiQ29tcG9uZW50IiwiYyIsInNldFRleHQiLCJjdXJyZW5jeSIsInNwcml0ZUZyYW1lIiwic3ByaXRlZnJhbWVzIiwibGFiZWwiLCJzdHJpbmciLCJNYXRoIiwiYWJzIiwiTGFiZWwiLCJTcHJpdGVGcmFtZSIsIlNwcml0ZSIsImFwcGx5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUMsR0FBQ0MsT0FBTjtBQUNBLElBQUlDLENBQUMsR0FBQ0MsTUFBTjtBQUNBLElBQUlDLENBQUMsR0FBQ0MsT0FBTjtBQUNBOztBQUFhLElBQUlDLEVBQUo7QUFBQSxJQUFNQyxDQUFDLEdBQUMsVUFBTSxTQUFLQyxTQUFYLEtBQXVCRixFQUFDLEdBQUMsV0FBU04sQ0FBVCxFQUFXRSxDQUFYLEVBQWE7QUFBQyxTQUFNLENBQUNJLEVBQUMsR0FBQ0csTUFBTSxDQUFDQyxjQUFQLElBQXVCO0FBQUNDLElBQUFBLFNBQVMsRUFBQztBQUFYLGVBQXlCQyxLQUF6QixJQUFnQyxVQUFTWixDQUFULEVBQVdFLENBQVgsRUFBYTtBQUFDRixJQUFBQSxDQUFDLENBQUNXLFNBQUYsR0FB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U0FBT3NCLENBQVAsSUFBVUEsQ0FBQyxDQUFDd0IsS0FBRixDQUFRLElBQVIsRUFBYTFCLFNBQWIsQ0FBVixJQUFtQyxJQUF6QztBQUE4QyxTQUFPcEIsQ0FBQyxDQUFDdUMsS0FBRixHQUFRLElBQVIsRUFBYXZDLENBQUMsQ0FBQ3NDLFlBQUYsR0FBZSxFQUE1QixFQUErQnRDLENBQUMsQ0FBQ29DLFFBQUYsR0FBVyxJQUExQyxFQUErQ3BDLENBQXREO0FBQXdEOztBQUFBSSxDQUFDLFdBQUQsR0FBVUYsQ0FBViIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGU9cmVxdWlyZTtcbnZhciB0PW1vZHVsZTtcbnZhciBvPWV4cG9ydHM7XG5cInVzZSBzdHJpY3RcIjt2YXIgbixpPXRoaXMmJnRoaXMuX19leHRlbmRzfHwobj1mdW5jdGlvbihlLHQpe3JldHVybihuPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbihlLHQpe2UuX19wcm90b19fPXR9fHxmdW5jdGlvbihlLHQpe2Zvcih2YXIgbyBpbiB0KU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LG8pJiYoZVtvXT10W29dKX0pKGUsdCl9LGZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gbygpe3RoaXMuY29uc3RydWN0b3I9ZX1uKGUsdCksZS5wcm90b3R5cGU9bnVsbD09PXQ/T2JqZWN0LmNyZWF0ZSh0KTooby5wcm90b3R5cGU9dC5wcm90b3R5cGUsbmV3IG8pfSksYT10aGlzJiZ0aGlzLl9fZGVjb3JhdGV8fGZ1bmN0aW9uKGUsdCxvLG4pe3ZhciBpLGE9YXJndW1lbnRzLmxlbmd0aCxyPWE8Mz90Om51bGw9PT1uP249T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LG8pOm47aWYoXCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3QmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUpcj1SZWZsZWN0LmRlY29yYXRlKGUsdCxvLG4pO2Vsc2UgZm9yKHZhciBzPWUubGVuZ3RoLTE7MDw9cztzLS0pKGk9ZVtzXSkmJihyPShhPDM/aShyKTozPGE/aSh0LG8scik6aSh0LG8pKXx8cik7cmV0dXJuIDM8YSYmciYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsbyxyKSxyfTtPYmplY3QuZGVmaW5lUHJvcGVydHkobyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgcixzPWNjLl9kZWNvcmF0b3IsdD1zLmNjY2xhc3Mscz1zLnByb3BlcnR5LHQ9KHI9Y2MuQ29tcG9uZW50LGkoYyxyKSxjLnByb3RvdHlwZS5zZXRUZXh0PWZ1bmN0aW9uKGUsdCl7dmFyIG89XCIrXCI7dGhpcy5jdXJyZW5jeS5zcHJpdGVGcmFtZT1cImZpc2hcIj09ZT90aGlzLnNwcml0ZWZyYW1lc1sxXTpcIkZpc2ggY29pblwiPT1lP3RoaXMuc3ByaXRlZnJhbWVzWzBdOnRoaXMuc3ByaXRlZnJhbWVzWzJdLHRoaXMubGFiZWwuc3RyaW5nPShvPXQ8MD9cIi1cIjpvKStNYXRoLmFicyh0KX0sYShbcyhjYy5MYWJlbCldLGMucHJvdG90eXBlLFwibGFiZWxcIix2b2lkIDApLGEoW3MoW2NjLlNwcml0ZUZyYW1lXSldLGMucHJvdG90eXBlLFwic3ByaXRlZnJhbWVzXCIsdm9pZCAwKSxhKFtzKGNjLlNwcml0ZSldLGMucHJvdG90eXBlLFwiY3VycmVuY3lcIix2b2lkIDApLGEoW3RdLGMpKTtmdW5jdGlvbiBjKCl7dmFyIGU9bnVsbCE9PXImJnIuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzO3JldHVybiBlLmxhYmVsPW51bGwsZS5zcHJpdGVmcmFtZXM9W10sZS5jdXJyZW5jeT1udWxsLGV9by5kZWZhdWx0PXQiXX0=