
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/MoneyUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '10a12iK+81P+7Z8ywXIZZ+6', 'MoneyUI');
// scripts/MoneyUI.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    s = e("AppCommon"),
    c = e("UserVo"),
    l = e("ListenID"),
    p = e("GameScene");
(u = r = r || {})[u.Coin = 0] = "Coin", u[u.Power = 1] = "Power", u[u.Fish = 2] = "Fish";
var d,
    t = cc._decorator,
    e = t.ccclass,
    u = t.menu,
    t = t.property,
    u = (d = cc.Component, i(f, d), f.prototype.start = function () {
  this.label = this.node.children[1].getComponent(cc.Label), s["default"].MainView.node.on(l.ListenID.Money_UpDate, this.setVal, this), this.setVal();
}, f.prototype.setVal = function () {
  var e = 0;
  0 <= [p.GAME_STATE.CountDown, p.GAME_STATE.Game].indexOf(s["default"].GScene._GameState) && s["default"].GScene.player && (this.type == r.Coin ? e = s["default"].GScene.player.wallet.coin : this.type == r.Power && (e = s["default"].GScene.player.wallet.power)), this.type == r.Fish && (e = c.UserVo.fish), this.label.string = e + "";
}, a([t({
  type: cc.Enum(r)
})], f.prototype, "type", void 0), a([e, u("UI/MoneyUI")], f));

function f() {
  var e = null !== d && d.apply(this, arguments) || this;
  return e.type = r.Coin, e;
}

o["default"] = u;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,