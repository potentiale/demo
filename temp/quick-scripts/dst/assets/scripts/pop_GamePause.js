
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/pop_GamePause.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8a2f96xtVhEIp9IbMVb7vqH', 'pop_GamePause');
// scripts/pop_GamePause.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    s = e("AppCommon"),
    c = e("CCTool"),
    l = e("pop"),
    t = cc._decorator,
    e = t.ccclass,
    e = (t.property, r = l["default"], i(p, r), p.prototype.updateToggle = function (e, t) {
  e.x = t ? 34.5 : -34.5, e.color = t ? cc.color().fromHEX("#3ab743") : cc.color().fromHEX("#5e5e5e");
}, p.prototype.onClickBgm = function () {
  s["default"].data.is_BgmOpen ? (s["default"].data.is_BgmOpen = 0, c.CCTool.Audio.StopBgm()) : (s["default"].data.is_BgmOpen = 1, c.CCTool.Audio.PlayBgm()), s["default"].setlocal("is_BgmOpen", s["default"].data.is_BgmOpen), this.updateToggle(this.nodeArr[0], !!s["default"].data.is_BgmOpen);
}, p.prototype.onClickAudio = function () {
  s["default"].data.is_AudioOpen ? s["default"].data.is_AudioOpen = 0 : s["default"].data.is_AudioOpen = 1, s["default"].setlocal("is_AudioOpen", s["default"].data.is_AudioOpen), this.updateToggle(this.nodeArr[1], !!s["default"].data.is_AudioOpen);
}, p.prototype.close = function () {
  r.prototype.close.call(this);
}, a([e], p));

function p() {
  var e = null !== r && r.apply(this, arguments) || this;
  return e._sellID = 0, e.initFun = {
    pop_GamePause: function pop_GamePause() {
      e.updateToggle(e.nodeArr[0], !!s["default"].data.is_BgmOpen), e.updateToggle(e.nodeArr[1], !!s["default"].data.is_AudioOpen);
    }
  }, e;
}

o["default"] = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,