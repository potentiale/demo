
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/AIMinMonster.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8b4e6lBVEdD+p7h5Tf8lKsV', 'AIMinMonster');
// scripts/AIMinMonster.js

"use strict";

var e = require;
var t = module;
var o = exports;
"use strict";

var _n,
    i = void 0 && (void 0).__extends || (_n = function n(e, t) {
  return (_n = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (e, t) {
    e.__proto__ = t;
  } || function (e, t) {
    for (var o in t) {
      Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
    }
  })(e, t);
}, function (e, t) {
  function o() {
    this.constructor = e;
  }

  _n(e, t), e.prototype = null === t ? Object.create(t) : (o.prototype = t.prototype, new o());
}),
    a = void 0 && (void 0).__decorate || function (e, t, o, n) {
  var i,
      a = arguments.length,
      r = a < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, o) : n;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(e, t, o, n);else for (var s = e.length - 1; 0 <= s; s--) {
    (i = e[s]) && (r = (a < 3 ? i(r) : 3 < a ? i(t, o, r) : i(t, o)) || r);
  }
  return 3 < a && r && Object.defineProperty(t, o, r), r;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var r,
    s = e("AppCommon"),
    c = e("CCTool"),
    l = e("GameScene"),
    p = e("AIState"),
    d = e("FSMBase"),
    t = cc._decorator,
    e = t.ccclass,
    e = (t.property, r = d["default"], i(u, r), u.prototype.initState = function (e, t) {
  var o = this;
  this._AiParameter = new p.AiParameter(), this._AiParameter.moveSpeed = t.MoveSpeedGhost, this._AiParameter.AttackRange = t.AttackRangeGhost, this.ower = e, this.statesList[p.StateType.Idle] = new p.IdleState(this), this.statesList[p.StateType.Move] = new p.MoveState(this), this.statesList[p.StateType.Die] = new p.DieState(this), this.statesList[p.StateType.Attack] = new p.AttackState(this), this.setAIState(p.StateType.Idle), this.CDManage = new c.CCTool.CDManage(), this.CDManage.UpCDFun = {
    atk: function atk() {
      return 1 / (o.ower.attribute.data.atkspeed - o.ower.attribute.data.atkspeed * (o.target ? o.target._atkSpeedDown : 0) + o.ower.isRageAtkSpeed);
    },
    think: function think() {
      return 1;
    },
    atkDialogue: function atkDialogue() {
      return 10;
    }
  }, this.CDManage.Init();
}, u.prototype.newThink = function () {
  this.CDManage.Check("think") && (this.CDManage.Set("think"), this.searchPath());
}, u.prototype.searchPath = function () {
  if (this.currentState == p.StateType.Idle) {
    if (!this.target || this.target._life <= 0) for (var e in s["default"].MapClr.roleList) {
      e = s["default"].MapClr.roleList[e];

      if (e.roleID != this.ower._owerID && 0 < e._life) {
        this.target = e, this.getPath(s["default"].MapClr.getMapPos(this.target.node.position));
        break;
      }
    }
    return this.setAIState(p.StateType.Move), !0;
  }
}, u.prototype.renounceTarget = function () {
  this.target = null, this.path.length = 0, this.ower.mySkeleton.timeScale = 1, this.setAIState(p.StateType.Idle);
}, u.prototype.checkDoor = function () {
  if (!(this.target._life <= 0)) {
    var e = this.target.myDoor;

    if (e._isActive) {
      if (s["default"].getDistance(this.node.position, e.node.position) < this._AiParameter.AttackRange) return this.sendAttack(e.node), !0;
    } else this.path = [this.target.node.position.clone()];
  }
}, u.prototype.checkPointAttaTarget = function () {
  var e = s["default"].MapClr.getMapPos(this.node.position),
      t = null === (t = this.target.myBed) || void 0 === t ? void 0 : t.myTerritoryMap;

  if (t && t[e.x] && t[e.x][e.y]) {
    e = t[e.x][e.y].arc;

    if (e && e._isActive && e.node && e.node.isValid && s["default"].getDistance(this.node.position, e.node.position) < this._AiParameter.AttackRange) {
      if (this.CDManage.Check("atk") || this.currentState != p.StateType.Move) return this.sendAttack(e.node), !0;
      this.ower.mySkeleton.timeScale = 1, this.setAIState(p.StateType.Idle);
    }
  }
}, u.prototype.checkRole = function () {
  if (!(this.target._life <= 0)) {
    var e = this.target;
    return 0 < e._life && s["default"].getDistance(this.node.position, e.node.position) < this._AiParameter.AttackRange ? (this.sendAttack(e.node), !0) : void 0;
  }
}, u.prototype.onMoveEnd = function () {
  this.ower.mySkeleton.timeScale = 1, this.setAIState(p.StateType.Idle), this.CDManage.Clear("atk");
}, u.prototype.sendAttack = function (e) {
  this.CDManage.Check("atk") && (this.CDManage.Set("atk"), this.ower.mySkeleton.timeScale = 1 / this.CDManage.limt.atk, this.ower.mySkeleton.node.scaleX = this.node.x > e.x ? 1 : -1, this.setAIState(p.StateType.Attack), this.ower.setHurt(e));
}, u.prototype.update = function (e) {
  if (!s["default"].GScene.isPause && this.ower._isActive) {
    if (this._time += e, s["default"].GScene._GameState == l.GAME_STATE.Game && (this.CDManage.OnUpdate(e), this.newThink(e), .2 < this._time)) {
      if (this.CDManage.Up("atk"), this.checkDoor()) return;
      if (this.checkPointAttaTarget()) return;
      if (this.checkRole()) return;
      [p.StateType.Move, p.StateType.Idle].indexOf(this.currentState) < 0 && this.setAIState(p.StateType.Idle), this._time = 0;
    }

    this.currentStateClr.OnUpdate(e);
  }
}, u.prototype.setIdleDialogue = function () {
  var e = this.DialogueList[p.StateType.Idle][this.DialogueNum];
  e ? (s["default"].MapClr.newDialogue(this.node, cc.v2(20, 150), e, 2.5), this.DialogueNum++) : this.DialogueNum = 0;
}, u.prototype.setAtkDialogue = function () {
  this.CDManage.Check("atkDialogue") && (this.CDManage.Set("atkDialogue"), s["default"].MapClr.newDialogue(this.node, cc.v2(20, 150), s["default"].GetArrTarge(this.DialogueList[p.StateType.Attack]), 3));
}, a([e], u));

function u() {
  var e,
      t = null !== r && r.apply(this, arguments) || this;
  return t.statesList = [], t._time = 0, t.DialogueNum = 0, t.DialogueList = ((e = {})[p.StateType.Idle] = [], e[p.StateType.Attack] = [], e[p.StateType.Escape] = [], e[p.StateType.Treat] = [], e.kill = [], e), t;
}

o["default"] = e;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,